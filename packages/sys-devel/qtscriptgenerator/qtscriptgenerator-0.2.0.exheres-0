# Copyright 2009, 2010 Ingmar Vanhassel
# Distributed under the terms of the GNU General Public License v2

MY_PNV=${PN}-src-${PV}
require qmake googlecode [ suffix=tar.gz ]

SUMMARY="Qt Script Generator is a tool that generates Qt bindings for Qt Script"
DESCRIPTION="
Qt Script Generator is a tool that generates Qt bindings for Qt Script. With
the generated bindings you get access to substantial portions of the Qt API
from within Qt Script. Qt is a cross-platform application framework for
desktop and embedded development. It includes an intuitive API and a rich C++
class library, integrated tools for GUI development and internationalization,
and support for Javaâ„¢ and C++ development.
"

LICENCES="GPL-2"
SLOT="0"
PLATFORMS="~amd64 ~x86"
MYOPTIONS=""

DEPENDENCIES="
    build+run:
        x11-libs/qt:4[dbus][opengl]
"

WORK="${WORKBASE}/${MY_PNV}"

src_prepare() {
    default

    # Won't build with our separate phonon
    edo sed -e "/phonon/d" -i generator/generator.qrc qtbindings/qtbindings.pro
}

src_configure() {
    for subdir in generator qtbindings ; do
        edo cd "${WORK}/${subdir}"
        eqmake ${subdir}.pro
    done
}

src_compile() {
    edo cd "${WORK}/generator"
    default

    # The qtbindings plugins use these, so we have to generate them
    edo ./generator --include-paths=/usr/include/qt4

    edo cd "${WORK}/qtbindings"
    default
}

src_install() {
    # qmake doesn't generate a usable 'make install' target
    dobin "${WORK}/generator/generator"

    # doexe & co dereference symlinks, so only doexe the actual .so's, and put the symlinks in place manually
    exeinto /usr/${LIBDIR}/qt4/plugins/script/
    doexe plugins/script/*.so.?.?.?

    for plugin in plugins/script/*.so.?.?.? ; do
        plugin=${plugin##*/}
        symlink=${plugin}
        for (( i=0; i<=2; i++ )); do
            symlink=${symlink%%.?}
            dosym ${plugin} /usr/${LIBDIR}/qt4/plugins/script/${symlink}
        done
    done

    emagicdocs
}

