Upstream: Under review, already +2ed
          https://codereview.qt-project.org/#/c/87613/
Reason: View context-sensitive cmake help, see
        http://www.kdab.com/context-sensitive-cmake-documentation-qtcreator/
        for further details.

From ace12f167bcffe1d6156cfe89e7700f4a37bee15 Mon Sep 17 00:00:00 2001
From: Stephen Kelly <stephen.kelly@kdab.com>
Date: Tue, 17 Jun 2014 11:33:58 +0200
Subject: [PATCH] CMake: Load context-sensitive help.

CMake 3 uses reStructuredText and Sphinx for documentation. Those
tools can generate Qt qch files, which makes it possible to load
the documentation in QtCreator and to enable context-sensitive
help when editing a cmake language file.

Add a simple parser to process commands. This may be extended in the
future to process variables and properties too.

Change-Id: Ic5a49a9ce828ad9a9e8ff4805b48302ee73bcc71
---
 src/plugins/cmakeprojectmanager/cmakeeditor.cpp | 42 +++++++++++++++++++++++++
 src/plugins/cmakeprojectmanager/cmakeeditor.h   |  2 ++
 2 files changed, 44 insertions(+)

diff --git a/src/plugins/cmakeprojectmanager/cmakeeditor.cpp b/src/plugins/cmakeprojectmanager/cmakeeditor.cpp
index 3552ac7..46c26cd 100644
--- a/src/plugins/cmakeprojectmanager/cmakeeditor.cpp
+++ b/src/plugins/cmakeprojectmanager/cmakeeditor.cpp
@@ -106,6 +106,48 @@ void CMakeEditor::build()
     }
 }
 
+QString CMakeEditor::contextHelpId() const
+{
+    int pos = position();
+    TextEditor::ITextEditorDocument* doc = const_cast<CMakeEditor*>(this)->textDocument();
+
+    QChar chr;
+    do {
+        --pos;
+        if (pos < 0)
+            break;
+        chr = doc->characterAt(pos);
+        if (chr == QLatin1Char('('))
+            return QString();
+    } while (chr.unicode() != QChar::ParagraphSeparator);
+
+    ++pos;
+    chr = doc->characterAt(pos);
+    while (chr.isSpace()) {
+        ++pos;
+        chr = doc->characterAt(pos);
+    }
+    int begin = pos;
+
+    do {
+        ++pos;
+        chr = doc->characterAt(pos);
+    } while (chr.isLetterOrNumber() || chr == QLatin1Char('_'));
+    int end = pos;
+
+    while (chr.isSpace()) {
+        ++pos;
+        chr = doc->characterAt(pos);
+    }
+
+    // Not a command
+    if (chr != QLatin1Char('('))
+        return QString();
+
+    QString command = doc->textAt(begin, end - begin).toLower();
+    return QLatin1String("command/") + command;
+}
+
 //
 // CMakeEditor
 //
diff --git a/src/plugins/cmakeprojectmanager/cmakeeditor.h b/src/plugins/cmakeprojectmanager/cmakeeditor.h
index 412e186..618f210 100644
--- a/src/plugins/cmakeprojectmanager/cmakeeditor.h
+++ b/src/plugins/cmakeprojectmanager/cmakeeditor.h
@@ -55,6 +55,8 @@ public:
     Core::IEditor *duplicate();
     TextEditor::CompletionAssistProvider *completionAssistProvider();
 
+    QString contextHelpId() const;
+
 private slots:
     void markAsChanged();
     void build();
-- 
2.0.0

