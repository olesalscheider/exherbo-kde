Upstream: yes, from git://anongit.kde.org/phonon.git

From 124a0e5cd5784f33da42a2be55bd93260e47ee44 Mon Sep 17 00:00:00 2001
From: Colin Guthrie <colin@mageia.org>
Date: Sun, 5 Jun 2011 17:20:01 +0200
Subject: [PATCH 1/4] Fix the FindPulseAudio.cmake file version checks.

As we're moving upstream to drop some of the version numbers,
parsing via regexp is unreliable. This approach uses the separate
major, minor, micro defines that will always be present for binary
compatibility
---
 cmake/FindPulseAudio.cmake |   15 ++++++++++-----
 1 files changed, 10 insertions(+), 5 deletions(-)

diff --git a/cmake/FindPulseAudio.cmake b/cmake/FindPulseAudio.cmake
index 6223029..302345b 100644
--- a/cmake/FindPulseAudio.cmake
+++ b/cmake/FindPulseAudio.cmake
@@ -50,11 +50,16 @@ if (PULSEAUDIO_INCLUDE_DIR AND PULSEAUDIO_LIBRARY)
    include(MacroEnsureVersion)
 
    # get PulseAudio's version from its version.h, and compare it with our minimum version
-   file(STRINGS "${PULSEAUDIO_INCLUDE_DIR}/pulse/version.h" pulse_version_h
-        REGEX ".*pa_get_headers_version\\(\\).*"
-        )
-   string(REGEX REPLACE ".*pa_get_headers_version\\(\\)\ \\(\"([0-9]+\\.[0-9]+\\.[0-9]+)\"\\).*" "\\1"
-                         PULSEAUDIO_VERSION "${pulse_version_h}")
+   file(STRINGS "${PULSEAUDIO_INCLUDE_DIR}/pulse/version.h" pulse_version_h REGEX ".*define.+PA_MAJOR.+")
+   string(REGEX REPLACE ".*define.+PA_M[A-Z]+.+([0-9]+).*" "\\1" PULSEAUDIO_MAJOR "${pulse_version_h}")
+
+   file(STRINGS "${PULSEAUDIO_INCLUDE_DIR}/pulse/version.h" pulse_version_h REGEX ".*define.+PA_MINOR.+")
+   string(REGEX REPLACE ".*define.+PA_M[A-Z]+.+([0-9]+).*" "\\1" PULSEAUDIO_MINOR "${pulse_version_h}")
+
+   file(STRINGS "${PULSEAUDIO_INCLUDE_DIR}/pulse/version.h" pulse_version_h REGEX ".*define.+PA_MICRO.+")
+   string(REGEX REPLACE ".*define.+PA_M[A-Z]+.+([0-9]+).*" "\\1" PULSEAUDIO_MICRO "${pulse_version_h}")
+
+   set(PULSEAUDIO_VERSION "${PULSEAUDIO_MAJOR}.${PULSEAUDIO_MINOR}.${PULSEAUDIO_MICRO}")
    macro_ensure_version("${PULSEAUDIO_MINIMUM_VERSION}" "${PULSEAUDIO_VERSION}" PULSEAUDIO_FOUND)
 else (PULSEAUDIO_INCLUDE_DIR AND PULSEAUDIO_LIBRARY)
    set(PULSEAUDIO_FOUND FALSE)
-- 
1.7.6.1

From c81ce141dce0ea289ce28b340501688c4284ba00 Mon Sep 17 00:00:00 2001
From: Colin Guthrie <colin@mageia.org>
Date: Sun, 5 Jun 2011 18:50:01 +0200
Subject: [PATCH 2/4] Tidy up the PulseAudio cmake file

---
 cmake/FindPulseAudio.cmake |   55 +++++++++++++++++++++++++++++--------------
 phonon/CMakeLists.txt      |    2 +-
 2 files changed, 38 insertions(+), 19 deletions(-)

diff --git a/cmake/FindPulseAudio.cmake b/cmake/FindPulseAudio.cmake
index 302345b..17d5c3e 100644
--- a/cmake/FindPulseAudio.cmake
+++ b/cmake/FindPulseAudio.cmake
@@ -5,51 +5,60 @@
 #  PULSEAUDIO_FOUND - system has the PulseAudio library
 #  PULSEAUDIO_INCLUDE_DIR - the PulseAudio include directory
 #  PULSEAUDIO_LIBRARY - the libraries needed to use PulseAudio
-#  PULSEAUDIO_MAINLOOP_LIBRARY - the libraries needed to use PulsAudio Mailoop
+#  PULSEAUDIO_MAINLOOP_LIBRARY - the libraries needed to use PulsAudio Mainloop
+#
+# The minimum required version of PulseAudio can be specified using the
+# standard syntax, e.g. find_package(PulseAudio 1.0)
 #
 # Copyright (c) 2008, Matthias Kretz, <kretz@kde.org>
 # Copyright (c) 2009, Marcus Hufgard, <Marcus.Hufgard@hufgard.de>
+# Copyright (c) 2011, Colin Guthrie, <colin@mageia.org>
 #
 # Redistribution and use is allowed according to the terms of the BSD license.
 # For details see the accompanying COPYING-CMAKE-SCRIPTS file.
 
-if (NOT PULSEAUDIO_MINIMUM_VERSION)
-  set(PULSEAUDIO_MINIMUM_VERSION "0.9.9")
-endif (NOT PULSEAUDIO_MINIMUM_VERSION)
+# Support PULSEAUDIO_MINIMUM_VERSION for compatibility:
+if(NOT PulseAudio_FIND_VERSION)
+  set(PulseAudio_FIND_VERSION "${PULSEAUDIO_MINIMUM_VERSION}")
+endif(NOT PulseAudio_FIND_VERSION)
 
-if (PULSEAUDIO_INCLUDE_DIR AND PULSEAUDIO_LIBRARY AND PULSEAUDIO_MAINLOOP_LIBRARY)
-   # Already in cache, be silent
-   set(PULSEAUDIO_FIND_QUIETLY TRUE)
-endif (PULSEAUDIO_INCLUDE_DIR AND PULSEAUDIO_LIBRARY AND PULSEAUDIO_MAINLOOP_LIBRARY)
+# the minimum version of PulseAudio we require
+if(NOT PulseAudio_FIND_VERSION)
+  set(PulseAudio_FIND_VERSION "0.9.9")
+endif(NOT PulseAudio_FIND_VERSION)
 
 if (NOT WIN32)
    include(FindPkgConfig)
-   pkg_check_modules(PC_PULSEAUDIO libpulse>=${PULSEAUDIO_MINIMUM_VERSION})
-   pkg_check_modules(PC_PULSEAUDIO_MAINLOOP libpulse-mainloop-glib)
+   pkg_check_modules(PC_PULSEAUDIO QUIET libpulse>=${PulseAudio_FIND_VERSION})
+   pkg_check_modules(PC_PULSEAUDIO_MAINLOOP QUIET libpulse-mainloop-glib)
 endif (NOT WIN32)
 
-FIND_PATH(PULSEAUDIO_INCLUDE_DIR pulse/pulseaudio.h
+find_path(PULSEAUDIO_INCLUDE_DIR pulse/pulseaudio.h
    HINTS
    ${PC_PULSEAUDIO_INCLUDEDIR}
    ${PC_PULSEAUDIO_INCLUDE_DIRS}
    )
 
-FIND_LIBRARY(PULSEAUDIO_LIBRARY NAMES pulse libpulse
+find_library(PULSEAUDIO_LIBRARY NAMES pulse libpulse
    HINTS
    ${PC_PULSEAUDIO_LIBDIR}
    ${PC_PULSEAUDIO_LIBRARY_DIRS}
    )
 
-FIND_LIBRARY(PULSEAUDIO_MAINLOOP_LIBRARY NAMES pulse-mainloop pulse-mainloop-glib libpulse-mainloop-glib
+find_library(PULSEAUDIO_MAINLOOP_LIBRARY NAMES pulse-mainloop pulse-mainloop-glib libpulse-mainloop-glib
    HINTS
    ${PC_PULSEAUDIO_LIBDIR}
    ${PC_PULSEAUDIO_LIBRARY_DIRS}
    )
 
-if (PULSEAUDIO_INCLUDE_DIR AND PULSEAUDIO_LIBRARY)
-   include(MacroEnsureVersion)
+if (PULSEAUDIO_VERSION)
+   # Already in cache, be silent
+   set(PULSEAUDIO_FIND_QUIETLY TRUE)
+endif (PULSEAUDIO_VERSION)
 
-   # get PulseAudio's version from its version.h, and compare it with our minimum version
+if (PULSEAUDIO_INCLUDE_DIR AND NOT PULSEAUDIO_VERSION)
+   # Use the separate major, minor, micro defines as these are more reliable than the combined string
+   # which may change if/when the minor or micro bits are dropped...
    file(STRINGS "${PULSEAUDIO_INCLUDE_DIR}/pulse/version.h" pulse_version_h REGEX ".*define.+PA_MAJOR.+")
    string(REGEX REPLACE ".*define.+PA_M[A-Z]+.+([0-9]+).*" "\\1" PULSEAUDIO_MAJOR "${pulse_version_h}")
 
@@ -59,8 +68,18 @@ if (PULSEAUDIO_INCLUDE_DIR AND PULSEAUDIO_LIBRARY)
    file(STRINGS "${PULSEAUDIO_INCLUDE_DIR}/pulse/version.h" pulse_version_h REGEX ".*define.+PA_MICRO.+")
    string(REGEX REPLACE ".*define.+PA_M[A-Z]+.+([0-9]+).*" "\\1" PULSEAUDIO_MICRO "${pulse_version_h}")
 
-   set(PULSEAUDIO_VERSION "${PULSEAUDIO_MAJOR}.${PULSEAUDIO_MINOR}.${PULSEAUDIO_MICRO}")
-   macro_ensure_version("${PULSEAUDIO_MINIMUM_VERSION}" "${PULSEAUDIO_VERSION}" PULSEAUDIO_FOUND)
+   set(PULSEAUDIO_VERSION "${PULSEAUDIO_MAJOR}.${PULSEAUDIO_MINOR}.${PULSEAUDIO_MICRO}" CACHE STRING "Version number of PulseAudio" FORCE)
+endif (PULSEAUDIO_INCLUDE_DIR AND NOT PULSEAUDIO_VERSION)
+
+# NB find_package_handle_standard_args seems to fail horribly and not work
+
+#include(FindPackageHandleStandardArgs)
+#find_package_handle_standard_args(PulseAudio REQUIRED_VARS PULSEAUDIO_LIBRARY PULSEAUDIO_INCLUDE_DIR
+#                                             VERSION_VAR PULSEAUDIO_VERSION )
+
+if (PULSEAUDIO_INCLUDE_DIR AND PULSEAUDIO_LIBRARY)
+  include(MacroEnsureVersion)
+  macro_ensure_version("${PulseAudio_FIND_VERSION}" "${PULSEAUDIO_VERSION}" PULSEAUDIO_FOUND)
 else (PULSEAUDIO_INCLUDE_DIR AND PULSEAUDIO_LIBRARY)
    set(PULSEAUDIO_FOUND FALSE)
 endif (PULSEAUDIO_INCLUDE_DIR AND PULSEAUDIO_LIBRARY)
diff --git a/phonon/CMakeLists.txt b/phonon/CMakeLists.txt
index a434997..8cc1e9c 100644
--- a/phonon/CMakeLists.txt
+++ b/phonon/CMakeLists.txt
@@ -5,7 +5,7 @@ endif (PHONON_BUILD_TESTS)
 
 add_subdirectory(experimental)
 
-set(PULSEAUDIO_MINIMUM_VERSION "0.9.15")
+set(PULSEAUDIO_FIND_VERSION "0.9.15")
 macro_optional_find_package(PulseAudio)
 if (PULSEAUDIO_FOUND)
     # PULSEAUDIO_DEVICE_MANAGER feature check could be moved to FindPulseAudio.cmake, hint hint. -- Rex
-- 
1.7.6.1

From bf80fdf58330c615d4d37002fa4374d0b8232594 Mon Sep 17 00:00:00 2001
From: Colin Guthrie <colin@mageia.org>
Date: Tue, 7 Jun 2011 19:04:23 +0100
Subject: [PATCH 3/4] Fix PulseAudio detection CMake.

Seems my last attempt had regexps that were a bit too greedy.
CCMAIL:kde-multimedia@kde.org
---
 cmake/FindPulseAudio.cmake |    6 +++---
 1 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/cmake/FindPulseAudio.cmake b/cmake/FindPulseAudio.cmake
index 17d5c3e..f5bb286 100644
--- a/cmake/FindPulseAudio.cmake
+++ b/cmake/FindPulseAudio.cmake
@@ -60,13 +60,13 @@ if (PULSEAUDIO_INCLUDE_DIR AND NOT PULSEAUDIO_VERSION)
    # Use the separate major, minor, micro defines as these are more reliable than the combined string
    # which may change if/when the minor or micro bits are dropped...
    file(STRINGS "${PULSEAUDIO_INCLUDE_DIR}/pulse/version.h" pulse_version_h REGEX ".*define.+PA_MAJOR.+")
-   string(REGEX REPLACE ".*define.+PA_M[A-Z]+.+([0-9]+).*" "\\1" PULSEAUDIO_MAJOR "${pulse_version_h}")
+   string(REGEX REPLACE ".*define.+PA_M[A-Z]+[^0-9]+([0-9]+).*" "\\1" PULSEAUDIO_MAJOR "${pulse_version_h}")
 
    file(STRINGS "${PULSEAUDIO_INCLUDE_DIR}/pulse/version.h" pulse_version_h REGEX ".*define.+PA_MINOR.+")
-   string(REGEX REPLACE ".*define.+PA_M[A-Z]+.+([0-9]+).*" "\\1" PULSEAUDIO_MINOR "${pulse_version_h}")
+   string(REGEX REPLACE ".*define.+PA_M[A-Z]+[^0-9]+([0-9]+).*" "\\1" PULSEAUDIO_MINOR "${pulse_version_h}")
 
    file(STRINGS "${PULSEAUDIO_INCLUDE_DIR}/pulse/version.h" pulse_version_h REGEX ".*define.+PA_MICRO.+")
-   string(REGEX REPLACE ".*define.+PA_M[A-Z]+.+([0-9]+).*" "\\1" PULSEAUDIO_MICRO "${pulse_version_h}")
+   string(REGEX REPLACE ".*define.+PA_M[A-Z]+[^0-9]+([0-9]+).*" "\\1" PULSEAUDIO_MICRO "${pulse_version_h}")
 
    set(PULSEAUDIO_VERSION "${PULSEAUDIO_MAJOR}.${PULSEAUDIO_MINOR}.${PULSEAUDIO_MICRO}" CACHE STRING "Version number of PulseAudio" FORCE)
 endif (PULSEAUDIO_INCLUDE_DIR AND NOT PULSEAUDIO_VERSION)
-- 
1.7.6.1

From 436d5379abe83c53c652d8a251f7ab504a1523df Mon Sep 17 00:00:00 2001
From: Colin Guthrie <colin@mageia.org>
Date: Thu, 4 Aug 2011 16:55:47 +0100
Subject: [PATCH 4/4] pulse: Use qPow() as pow() is sometimes not found.

---
 phonon/pulsestream.cpp |    3 ++-
 1 files changed, 2 insertions(+), 1 deletions(-)

diff --git a/phonon/pulsestream.cpp b/phonon/pulsestream.cpp
index d1e6711..e129f1b 100644
--- a/phonon/pulsestream.cpp
+++ b/phonon/pulsestream.cpp
@@ -21,6 +21,7 @@
 */
 
 #include "pulsestream_p.h"
+#include <QtCore/qmath.h>
 
 QT_BEGIN_NAMESPACE
 
@@ -81,7 +82,7 @@ void PulseStream::setVolume(const pa_cvolume *volume)
         // AudioOutput expects the "backend" to supply values that have been
         // adjusted for Stephens' law, so we need to fudge them accordingly
         // so that the %ages match up in KMix/the application's own slider.
-        emit volumeChanged(pow(vol, VOLTAGE_TO_LOUDNESS_EXPONENT));
+        emit volumeChanged(qPow(vol, VOLTAGE_TO_LOUDNESS_EXPONENT));
     }
 }
 
-- 
1.7.6.1

