# Copyright 2008 Bernd Steinhauser <berniyh@exherbo.org>
# Copyright 2009 Bo Ã˜rsted Andresen <zlin@exherbo.org>
# Copyright 2010 Ingmar Vanhassel
# Copyright 2013-2014 Heiko Becker <heirecka@exherbo.org>
# Distributed under the terms of the GNU General Public License v2
# Based in part upon 'phonon-4.2-scm.kdebuild-1' from Genkdesvn, which is:
#     Copyright 2007-2008 by the individual contributors of the genkdesvn project
#     Based in part upon the respective ebuild in Gentoo which is:
#     Copyright 1999-2008 Gentoo Foundation

if ever is_scm ; then
    SCM_REPOSITORY="git://anongit.kde.org/${PN}.git"
    require scm-git
else
    DOWNLOADS="mirror://kde/stable/phonon/${PV}/${PNV}.tar.xz"
fi

require cmake [[ api=2 ]] easy-multibuild

SUMMARY="KDE multimedia API"
HOMEPAGE="http://phonon.kde.org"

LICENCES="LGPL-2.1"
SLOT="0"
MYOPTIONS="doc
    gstreamer  [[ description = [ Enable the Phonon Gstreamer backend ] ]]
    pulseaudio [[ description = [ Enable playback through Pulseaudio ] ]]
    qt4
    qt5        [[ description = [ Build against Qt5 instead of Qt4 (experimental) ] ]]
    vlc        [[ description = [ Use the Phonon VLC backend, which is the recommended backend ] ]]
    zeitgeist  [[ description = [ Enables multimedia applications to let Zeitgeist log playback activity ] ]]

    ( gstreamer vlc ) [[ number-selected = at-least-one ]]
    ( qt4 qt5 ) [[ number-selected = at-least-one ]]
    qt5 [[ requires = -zeitgeist ]]

    multibuild_c: 32 64
"
# NOTE: QZeitgeist has not been ported to Qt5, since the restrition of qt5 and zeitgeist

DEPENDENCIES="
    build:
        doc? ( app-doc/doxygen )
        virtual/pkg-config
    build+run:
        pulseaudio? (
            dev-libs/glib:2
            media-sound/pulseaudio[>=0.9.21][multibuild_c:*(-)?]
        )
        qt4? (
            x11-libs/qt:4[>=4.7.4-r1][dbus][multibuild_c:*(-)?][phonon] [[
                note = [ Requires >=4.6.1 but 4.7.4-r1 added some multilib fixes
                         that are needed when multibuild is enabled ] ]]
        )
        qt5? (
            x11-libs/qtbase:5[multibuild_c:*(-)?]
            x11-libs/qtquick1:5[multibuild_c:*(-)?]
            x11-libs/qttools:5[multibuild_c:*(-)?]
        )
        zeitgeist? ( dev-libs/libqzeitgeist[>=0.8] )
    post:
        gstreamer? ( media-libs/phonon-gstreamer )
        vlc? ( media-libs/phonon-vlc )
"

CMAKE_SRC_CONFIGURE_OPTIONS=(
    'doc PHONON_BUILD_DOC'
)
CMAKE_SRC_CONFIGURE_OPTION_WITHS=(
        'pulseaudio GLIB2'
        'pulseaudio PulseAudio'
        'zeitgeist QZeitgeist'
)
CMAKE_SRC_CONFIGURE_PARAMS=(
    # automoc is included in cmake since 2.8.5
    -DCMAKE_AUTOMOC:BOOL=TRUE
    # super experimental QML support
    -DPHONON_BUILD_DECLARATIVE_PLUGIN:BOOL=FALSE
    -DPHONON_BUILD_DESIGNER_PLUGIN:BOOL=TRUE
    -DPHONON_INSTALL_QT_EXTENSIONS_INTO_SYSTEM_QT:BOOL=TRUE
)

_ecmake_helper() {
    ecmake \
        "${CMAKE_SRC_CONFIGURE_PARAMS[@]}" \
        $(for s in "${CMAKE_SRC_CONFIGURE_OPTIONS[@]}" ; do
            cmake_option ${s}
        done ) \
        $(for s in "${CMAKE_SRC_CONFIGURE_OPTION_WITHS[@]}" ; do
            cmake_with ${s}
        done ) \
        "$@"
}

configure_one_multibuild() {
    CMAKE_SRC_CONFIGURE_PARAMS+=( -DCMAKE_INSTALL_LIBDIR=${LIBDIR} )
    if option qt4 ; then
        edo mkdir "${WORKBASE}"/${MULTIBUILD_CLASS}/${MULTIBUILD_TARGET}/qt4-build
        edo pushd "${WORKBASE}"/${MULTIBUILD_CLASS}/${MULTIBUILD_TARGET}/qt4-build
        _ecmake_helper -DPHONON_BUILD_PHONON4QT5:BOOL=FALSE
        edo popd
    fi

    qt5_cmake_params+=(
        -DQt5Core_DIR=/usr/${LIBDIR}/cmake/Qt5Core
        -DQt5DBus_DIR=/usr/${LIBDIR}/cmake/Qt5DBus
        -DQt5Declarative_DIR=/usr/${LIBDIR}/cmake/Qt5Declarative
        -DQt5Designer_DIR=/usr/${LIBDIR}/cmake/Qt5Designer
        -DQt5Gui_DIR=/usr/${LIBDIR}/cmake/Qt5Gui
        -DQt5OpenGL_DIR=/usr/${LIBDIR}/cmake/Qt5OpenGL
        -DQt5Script=/usr/${LIBDIR}/cmake/Qt5Script
        -DQt5Widgets_DIR=/usr/${LIBDIR}/cmake/Qt5Widgets
        -DQt5Xml_DIR=/usr/${LIBDIR}/cmake/Qt5Xml
    )

    if option qt5 ; then
        edo mkdir "${WORKBASE}"/${MULTIBUILD_CLASS}/${MULTIBUILD_TARGET}/qt5-build
        edo pushd "${WORKBASE}"/${MULTIBUILD_CLASS}/${MULTIBUILD_TARGET}/qt5-build
        _ecmake_helper -DPHONON_BUILD_PHONON4QT5:BOOL=TRUE "${qt5_cmake_params[@]}"
        edo popd
    fi
}

compile_one_multibuild() {
    if option qt4 ; then
        edo pushd "${WORKBASE}"/${MULTIBUILD_CLASS}/${MULTIBUILD_TARGET}/qt4-build
        emake
        edo popd
    fi
    if option qt5 ; then
        edo pushd "${WORKBASE}"/${MULTIBUILD_CLASS}/${MULTIBUILD_TARGET}/qt5-build
        emake
        edo popd
    fi
}

install_one_multibuild() {
    if option qt4; then
        edo pushd "${WORKBASE}"/${MULTIBUILD_CLASS}/${MULTIBUILD_TARGET}/qt4-build
        emake -j1 DESTDIR="${IMAGE}" install
    fi
    if option qt5; then
        edo pushd "${WORKBASE}"/${MULTIBUILD_CLASS}/${MULTIBUILD_TARGET}/qt5-build
        emake -j1 DESTDIR="${IMAGE}" install
    fi
}

