Upstream: yes

From 8891bb7384d99c78f1bf306f314a93e6da23bd16 Mon Sep 17 00:00:00 2001
From: Montel Laurent <montel@kde.org>
Date: Mon, 2 Jun 2014 20:04:04 +0200
Subject: [PATCH 1/2] Add KPluralHandlingSpinbox to allow to add plural i18n
 when we port KIntSpinBox

Review and ok'ed by David.
Use it just when we need to add suffix with plural otherwise use QSpinBox

CCMAIL: mgraesslin@kde.org
---
 KF5TextWidgetsConfig.cmake.in            |  2 +-
 autotests/CMakeLists.txt                 |  1 +
 autotests/kpluralhandlingspinboxtest.cpp | 79 ++++++++++++++++++++++++++++++++
 autotests/kpluralhandlingspinboxtest.h   | 40 ++++++++++++++++
 src/CMakeLists.txt                       |  6 ++-
 src/widgets/kpluralhandlingspinbox.cpp   | 64 ++++++++++++++++++++++++++
 src/widgets/kpluralhandlingspinbox.h     | 61 ++++++++++++++++++++++++
 7 files changed, 250 insertions(+), 3 deletions(-)
 create mode 100644 autotests/kpluralhandlingspinboxtest.cpp
 create mode 100644 autotests/kpluralhandlingspinboxtest.h
 create mode 100644 src/widgets/kpluralhandlingspinbox.cpp
 create mode 100644 src/widgets/kpluralhandlingspinbox.h

diff --git a/KF5TextWidgetsConfig.cmake.in b/KF5TextWidgetsConfig.cmake.in
index 3a88d91..4a550f7 100644
--- a/KF5TextWidgetsConfig.cmake.in
+++ b/KF5TextWidgetsConfig.cmake.in
@@ -8,7 +8,7 @@ find_dependency(KF5WindowSystem "@KF5_DEP_VERSION@")
 
 find_dependency(Qt5Widgets @REQUIRED_QT_VERSION@)
 find_dependency(KF5Sonnet "@KF5_DEP_VERSION@")
-
+find_dependency(KF5I18n "@KF5_DEP_VERSION@")
 
 include("${CMAKE_CURRENT_LIST_DIR}/KF5TextWidgetsTargets.cmake")
 
diff --git a/autotests/CMakeLists.txt b/autotests/CMakeLists.txt
index 5bd7034..438446c 100644
--- a/autotests/CMakeLists.txt
+++ b/autotests/CMakeLists.txt
@@ -13,4 +13,5 @@ ktextwidgets_unit_tests(
   kreplacetest
   krichtextedittest
   ktextedit_unittest
+  kpluralhandlingspinboxtest
 )
diff --git a/autotests/kpluralhandlingspinboxtest.cpp b/autotests/kpluralhandlingspinboxtest.cpp
new file mode 100644
index 0000000..1b123b0
--- /dev/null
+++ b/autotests/kpluralhandlingspinboxtest.cpp
@@ -0,0 +1,79 @@
+/**
+ * Copyright 2014 Laurent Montel <montel@kde.org>
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
+ * 02110-1301  USA
+ */
+
+#include "kpluralhandlingspinboxtest.h"
+#include "kpluralhandlingspinbox.h"
+
+#include <QTest>
+
+QTEST_MAIN(KPluralHandlingSpinBoxTest)
+
+KPluralHandlingSpinBoxTest::KPluralHandlingSpinBoxTest()
+{
+}
+
+void KPluralHandlingSpinBoxTest::shouldHaveDefautValue()
+{
+    KPluralHandlingSpinBox spinbox;
+    QCOMPARE(spinbox.suffix(), QString());
+}
+
+void KPluralHandlingSpinBoxTest::shouldUseSingularValueWhenUseValueEqualToOne()
+{
+    KPluralHandlingSpinBox spinbox;
+    spinbox.setSuffix(ki18np("singular", "plural"));
+    spinbox.setValue(1);
+    QCOMPARE(spinbox.suffix(), QLatin1String("singular"));
+}
+
+void KPluralHandlingSpinBoxTest::shouldUsePlurialValueWhenUseValueSuperiorToOne()
+{
+    KPluralHandlingSpinBox spinbox;
+    spinbox.setSuffix(ki18np("singular", "plural"));
+    spinbox.setValue(2);
+    QCOMPARE(spinbox.suffix(), QLatin1String("plural"));
+}
+
+void KPluralHandlingSpinBoxTest::shouldUseSingularValueWhenWeChangeValueAndFinishWithValueEqualOne()
+{
+    KPluralHandlingSpinBox spinbox;
+    spinbox.setSuffix(ki18np("singular", "plural"));
+    spinbox.setValue(2);
+    spinbox.setValue(1);
+    QCOMPARE(spinbox.suffix(), QLatin1String("singular"));
+    QCOMPARE(spinbox.value(), 1);
+}
+
+void KPluralHandlingSpinBoxTest::shouldReturnEmptySuffix()
+{
+    KPluralHandlingSpinBox spinbox;
+    spinbox.setValue(2);
+    QCOMPARE(spinbox.suffix(), QString());
+}
+
+void KPluralHandlingSpinBoxTest::shouldReturnDefaultSuffixWhenUseQSpinBoxDefaultSuffixFunction()
+{
+    KPluralHandlingSpinBox spinbox;
+    spinbox.setSuffix(QLatin1Literal("suffix"));
+    spinbox.setValue(2);
+    QCOMPARE(spinbox.suffix(), QLatin1String("suffix"));
+    spinbox.setValue(1);
+    QCOMPARE(spinbox.suffix(), QLatin1String("suffix"));
+}
+
diff --git a/autotests/kpluralhandlingspinboxtest.h b/autotests/kpluralhandlingspinboxtest.h
new file mode 100644
index 0000000..e7677c2
--- /dev/null
+++ b/autotests/kpluralhandlingspinboxtest.h
@@ -0,0 +1,40 @@
+/**
+ * Copyright 2014 Laurent Montel <montel@kde.org>
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
+ * 02110-1301  USA
+ */
+
+#ifndef KPLURALHANDLINGSPINBOXTEST_H
+#define KPLURALHANDLINGSPINBOXTEST_H
+
+#include <QObject>
+
+class KPluralHandlingSpinBoxTest : public QObject
+{
+    Q_OBJECT
+public:
+    KPluralHandlingSpinBoxTest();
+
+private Q_SLOTS:
+    void shouldHaveDefautValue();
+    void shouldUseSingularValueWhenUseValueEqualToOne();
+    void shouldUsePlurialValueWhenUseValueSuperiorToOne();
+    void shouldUseSingularValueWhenWeChangeValueAndFinishWithValueEqualOne();
+    void shouldReturnEmptySuffix();
+    void shouldReturnDefaultSuffixWhenUseQSpinBoxDefaultSuffixFunction();
+};
+
+#endif // KPLURALHANDLINGSPINBOXTEST_H
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index c7e5a9a..bc98b2c 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -8,6 +8,7 @@ set(ktextwidgets_LIB_SRCS
   widgets/krichtextwidget.cpp
   widgets/ktextedit.cpp
   widgets/nestedlisthelper.cpp
+  widgets/kpluralhandlingspinbox.cpp
 )
 
 add_library(KF5TextWidgets ${ktextwidgets_LIB_SRCS})
@@ -29,10 +30,10 @@ target_link_libraries(KF5TextWidgets
 PUBLIC
   Qt5::Widgets
   KF5::SonnetUi
+  KF5::I18n
 PRIVATE
   Qt5::DBus
   KF5::SonnetCore
-  KF5::I18n
   KF5::Service
   KF5::ConfigWidgets
   KF5::WindowSystem
@@ -50,6 +51,7 @@ ecm_generate_headers(KTextWidgets_HEADERS
   KRichTextEdit
   KRichTextWidget
   KTextEdit
+  KPluralHandlingSpinBox
 
   RELATIVE widgets
   REQUIRED_HEADERS KTextWidgets_HEADERS
@@ -83,5 +85,5 @@ install(FILES
 install( FILES kregexpeditor/kregexpeditor.desktop DESTINATION ${SERVICETYPES_INSTALL_DIR} )
 
 include(ECMGeneratePriFile)
-ecm_generate_pri_file(BASE_NAME KTextWidgets LIB_NAME KF5TextWidgets DEPS "widgets SonnetUi" FILENAME_VAR PRI_FILENAME INCLUDE_INSTALL_DIR ${KF5_INCLUDE_INSTALL_DIR}/KTextWidgets)
+ecm_generate_pri_file(BASE_NAME KTextWidgets LIB_NAME KF5TextWidgets DEPS "widgets SonnetUi I18n" FILENAME_VAR PRI_FILENAME INCLUDE_INSTALL_DIR ${KF5_INCLUDE_INSTALL_DIR}/KTextWidgets)
 install(FILES ${PRI_FILENAME} DESTINATION ${ECM_MKSPECS_INSTALL_DIR})
diff --git a/src/widgets/kpluralhandlingspinbox.cpp b/src/widgets/kpluralhandlingspinbox.cpp
new file mode 100644
index 0000000..baf001b
--- /dev/null
+++ b/src/widgets/kpluralhandlingspinbox.cpp
@@ -0,0 +1,64 @@
+/**
+ * Copyright 2014 Laurent Montel <montel@kde.org>
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
+ * 02110-1301  USA
+ */
+
+#include "kpluralhandlingspinbox.h"
+
+class KPluralHandlingSpinBox::KPluralHandlingSpinBoxPrivate
+{
+public:
+    KPluralHandlingSpinBoxPrivate(QSpinBox *q)
+        : q(q)
+    {
+        connect(q, SIGNAL(valueChanged(int)), q, SLOT(updateSuffix(int)));
+    }
+
+    void updateSuffix(int value)
+    {
+        if (!pluralSuffix.isEmpty()) {
+            KLocalizedString s = pluralSuffix;
+            q->setSuffix(s.subs(value).toString());
+        }
+    }
+
+    QSpinBox *q;
+    KLocalizedString pluralSuffix;
+};
+
+
+KPluralHandlingSpinBox::KPluralHandlingSpinBox(QWidget *parent)
+    : QSpinBox(parent),
+      d(new KPluralHandlingSpinBoxPrivate(this))
+{
+}
+
+KPluralHandlingSpinBox::~KPluralHandlingSpinBox()
+{
+    delete d;
+}
+
+void KPluralHandlingSpinBox::setSuffix(const KLocalizedString &suffix)
+{
+    d->pluralSuffix = suffix;
+    if (suffix.isEmpty()) {
+        QSpinBox::setSuffix(QString());
+    } else {
+        d->updateSuffix(value());
+    }
+}
+#include "moc_kpluralhandlingspinbox.cpp"
diff --git a/src/widgets/kpluralhandlingspinbox.h b/src/widgets/kpluralhandlingspinbox.h
new file mode 100644
index 0000000..c181942
--- /dev/null
+++ b/src/widgets/kpluralhandlingspinbox.h
@@ -0,0 +1,61 @@
+/**
+ * Copyright 2014 Laurent Montel <montel@kde.org>
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
+ * 02110-1301  USA
+ */
+
+#ifndef KPLURALHANDLINGSPINBOX_H
+#define KPLURALHANDLINGSPINBOX_H
+
+#include <ktextwidgets_export.h>
+#include <KLocalizedString>
+#include <QSpinBox>
+
+
+/**
+ * @brief A QSpinBox with plural handling for the suffix.
+ *
+ * @author Laurent Montel <montel@kde.org>
+ *
+ * @since 5.0
+ */
+class KTEXTWIDGETS_EXPORT KPluralHandlingSpinBox : public QSpinBox
+{
+    Q_OBJECT
+public:
+    /**
+     * Default constructor
+     */
+
+    explicit KPluralHandlingSpinBox(QWidget *parent = 0);
+    ~KPluralHandlingSpinBox();
+
+    /**
+     * Sets the suffix to @p suffix.
+     * Use this to add a plural-aware suffix, e.g. by using ki18np("singular", "plural").
+     */
+    void setSuffix(const KLocalizedString &suffix);
+    using QSpinBox::setSuffix;
+private:
+    class KPluralHandlingSpinBoxPrivate;
+    friend class KPluralHandlingSpinBoxPrivate;
+    KPluralHandlingSpinBoxPrivate *const d;
+
+    Q_DISABLE_COPY(KPluralHandlingSpinBox)
+    Q_PRIVATE_SLOT(d, void updateSuffix(int))
+};
+
+#endif // KPLURALHANDLINGSPINBOX_H
-- 
2.0.0

