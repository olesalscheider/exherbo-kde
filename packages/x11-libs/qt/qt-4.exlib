# Copyright 2008 Bo Ã˜rsted Andresen <zlin@exherbo.org>
# Copyright 2008-2009 Ingmar Vanhassel
# Distributed under the terms of the GNU General Public License v2
# Based in part upon 'qt-4.3.4-r1.ebuild' from Gentoo, which is:
#     Copyright 1999-2008 Gentoo Foundation

require multilib toolchain-funcs

export_exlib_phases src_prepare src_configure src_install

myexparam pn=${MY_PN:-${PN}}
myexparam pv=${MY_PV:-${PV}}
MY_PNV=$(exparam pn)-$(exparam pv)

SUMMARY="Qt Cross-platform application framework for desktop and embedded development"
HOMEPAGE="http://www.qtsoftware.com/"
DOWNLOADS="http://download.qt.nokia.com/qt/source/${MY_PNV}.tar.gz"
BUGS_TO="kde@exherbo.org"

UPSTREAM_CHANGELOG="http://www.qtsoftware.com/developer/changes/changes-${PV}"

LICENCES="|| ( LGPL-2.1 GPL-3 )"

SLOT=${PV:0:1}

WORK=${WORKBASE}/${MY_PNV}

MYOPTIONS_PARTS="demos doc examples" # tools
SQL_BACKENDS="mysql postgresql sqlite" # firebird odbc
# option=X enables: accessibility gif jpeg mng png svg tiff
# TODO -X builds QtCore only, conflicts with other flags
MYOPTIONS="X dbus cups glib gstreamer opengl phonon
    platform:amd64
    qt3support sql ssl webkit xinerama ${MYOPTIONS_PARTS}
    ( opengl webkit xinerama ) [[ requires = X ]]
    ( ${SQL_BACKENDS} ) [[ requires = sql ]]
    sql? (
        ( ${SQL_BACKENDS} ) [[ number-selected = at-least-one ]]
    )
    demos       [[ description = [ Compile demo-programs that show off Qt's widgets & functionality ] ]]
    glib        [[ description = [ Add support for the glib eventloop ] ]]
    gstreamer   [[ description = [ Build the gstreamer backend for phonon ]
                   requires    = [ glib phonon ] ]]
    gtk         [[ description = [ Enable GTK+ style support, this will install a Qt4 style that renders using GTK+, to blend in with a GTK+ desktop ]
                   requires = glib ]]
    phonon      [[ description = [ Multimedia API with support for multiple backends for playback ] ]]
    qt3support  [[ description = [ A module consisting of classes that ease porting from Qt3 to Qt4 ] ]]
    sql         [[ description = [ Build the SQL plugins ] ]]
    webkit      [[ requires    = [ ssl ]
                   description = [ Build WebKit, an open source web browser engine, using Qt rendering ] ]]
"

DEPENDENCIES="
    build:
        dev-util/pkg-config
        x11-proto/inputproto
        xinerama? ( x11-proto/xineramaproto )
    build+run:
        sys-libs/zlib
        x11-libs/libX11
        x11-libs/libXext
        X? (
            media-libs/fontconfig
            media-libs/freetype:2
            media-libs/jpeg
            media-libs/libmng
            media-libs/libpng
            media-libs/tiff
            x11-libs/libSM
            x11-libs/libXcursor
            x11-libs/libXfixes
            x11-libs/libXi
            x11-libs/libXrandr[>=1.1]
            x11-libs/libXrender[>=0.6]
        )
        cups? ( net-print/cups )
        dbus? ( sys-apps/dbus[>=1.0.2] )
        glib? ( dev-libs/glib:2 )
        gstreamer? (
            dev-libs/libxml2
            media-libs/gstreamer[>=0.10]
            media-plugins/gst-plugins-base[>=0.10][gstreamer_plugins:alsa]
            media-plugins/gst-plugins-good[>=0.10]  [[ description = [ Needed for Phonon video functionality ] ]]
        )
        gtk? (
            x11-libs/gtk+:2[>=2.10]
            dev-libs/atk
        )
        mysql? ( dev-db/mysql )
        opengl? ( x11-dri/mesa )
        postgresql? ( dev-db/postgresql )
        sqlite? ( dev-db/sqlite:3 )
        ssl? ( dev-libs/openssl )
        xinerama? ( x11-libs/libXinerama )
"

DEFAULT_SRC_INSTALL_PARAMS=( INSTALL_ROOT="${IMAGE}" )

# Packages that need QtSQL should depend on x11-libs/qt:4[sql]
# option='sql' needs at least one SQL plugin, any-of mysql, postgresql, sqlite, (firebird, odbc)

qt4_mkspecs_dir() {
     # Allows us to define which mkspecs dir we want to use.
    local spec

    spec="linux"
    CXX=$(tc-getCXX)
    if [[ ${CXX} == *g++* ]]; then
        spec+="-g++"
        option platform:amd64 && spec+="-64"
    else
        die "Unknown compiler ${CXX}"
    fi

    echo "${spec}"
}

qt4_enable() {
    local flag="${1}" feature="${2:-${1}}"
    local prefix="${3:+-}${3}" postfix="${4:+-}${4}"
    (( ${#} >= 4 )) && shift 4 || shift ${#}

    if option "${flag}"; then
        echo "${prefix}-${feature}${postfix}" "${@}"
    else
        echo "-no-${feature}"
    fi
}

qconf4() {
    local myconf=() libdir=$(get_libdir)

    # paths
    myconf=(
        -prefix /usr
        -bindir /usr/bin
        -docdir /usr/share/doc/${PNVR}
        -headerdir /usr/include/qt4
        -libdir /usr/${libdir}/qt4
        -plugindir /usr/${libdir}/qt4/plugins
        -datadir /usr/share/qt4
        -translationdir /usr/share/qt4/translations
        -sysconfdir /etc/qt4
        -examplesdir /usr/share/qt4/examples
        -demosdir /usr/share/qt4/demos
    )

    # arch
    case "${ARCH}" in
        amd64)                          myconf+=( -arch x86_64 ) ;;
        ppc|ppc64)                      myconf+=( -arch powerpc ) ;;
        x86|x86-*)                      myconf+=( -arch i386 ) ;;
        alpha|arm|ia64|mips|s390|sparc) myconf+=( -arch ${ARCH} ) ;;
        hppa|sh)                        myconf+=( -arch generic ) ;;
        *) die "${ARCH} is unsupported by this eclass. Please file a bug" ;;
    esac

    echo ./configure ${myconf[@]} "$@" ${EXTRA_ECONF} 1>&2
    ./configure ${myconf[@]} "$@" ${EXTRA_ECONF} || die_unless_nonfatal "configure failed" || return 1
}

qt-4_src_prepare() {
    default

    # Don't prestrip.
    # Set {C,CXX,LD}FLAGS.
    # Do not link with -rpath (Gentoo bug #75181).
    # Don't put libraries in X11R6/.

    sed -e "/^CONFIG +=/s:$: nostrip:" -i qmake/qmake.pro projects.pro || die "sed on .pro files failed"
    sed -e "/^QMAKE_SWITCHES=/s:$:CONFIG+=nostrip:" -i configure || die "sed on configure failed"

    sed -e "s:QMAKE_CFLAGS_RELEASE.*=.*:QMAKE_CFLAGS_RELEASE=${CFLAGS}:" \
        -e "s:QMAKE_CXXFLAGS_RELEASE.*=.*:QMAKE_CXXFLAGS_RELEASE=${CXXFLAGS}:" \
        -e "s:QMAKE_LFLAGS_RELEASE.*=.*:QMAKE_LFLAGS_RELEASE=${LDFLAGS}:" \
        -e "/CONFIG/s:$: nostrip:" \
        -e "s:QMAKE_RPATH.*=.*:QMAKE_RPATH=:" \
        -e "s:X11R6/::" \
        -i "${WORK}"/mkspecs/$(qt4_mkspecs_dir)/qmake.conf || die "sed on qmake.conf failed"

    sed -e "s:QMAKE_CFLAGS_RELEASE.*=.*:QMAKE_CFLAGS_RELEASE=${CPPFLAGS} ${CFLAGS} ${ASFLAGS}:" \
        -e "s:QMAKE_CXXFLAGS_RELEASE.*=.*:QMAKE_CXXFLAGS_RELEASE=${CPPFLAGS} ${CXXFLAGS} ${ASFLAGS}:" \
        -e "s:QMAKE_LFLAGS_RELEASE.*=.*:QMAKE_LFLAGS_RELEASE=${LDFLAGS}:" \
        -e "s:QMAKE_RPATH.*=.*:QMAKE_RPATH=:" \
        -i "${WORK}"/mkspecs/common/g++.conf || die "sed on g++.conf failed"

    sed -i -e "s:X11R6/::" "${WORK}"/mkspecs/common/linux.conf || die "sed on linux.conf failed"

    sed -e "s:CXXFLAGS.*=:CXXFLAGS=${CPPFLAGS} ${CXXFLAGS} ${ASFLAGS} :" \
        -e "s:LFLAGS.*=:LFLAGS=${LDFLAGS} :" \
        -i "${WORK}"/qmake/Makefile.unix || die "sed on Makefile.unix failed"
}

qt-4_src_configure() {
    local myconf=()
    myconf=(
        -confirm-license
        -opensource
        -fast
        -largefile
        -no-rpath
        -no-separate-debug-info
        -pch
        -reduce-relocations
        -release
        -stl
        -verbose
    )

    myconf+=(
        -iconv
        -no-nas-sound
        -no-nis
        # This also enables tablet support
        -xinput
        -system-zlib
        -xmlpatterns
        $(qt4_enable X accessibility)
        $(qt4_enable cups)
        $(qt4_enable dbus "" "" linked)
        $(qt4_enable glib)
        $(qt4_enable gstreamer phonon-backend)
        $(qt4_enable gtk gtkstyle)
        $(ever at_least 4.6.0_beta && echo -no-javascript-jit $(qt4_enable multimedia))
        $(qt4_enable opengl)
        $(qt4_enable qt3support)
        $(qt4_enable phonon)
        $(qt4_enable ssl openssl)
        $(qt4_enable webkit)
        $(qt4_enable xinerama)
    )

    # CPU flags: XXX
    # 3dnow, mmx, sse, sse2

    # X
    local o prefix X_options="fontconfig sm xcursor xfixes xkb xrandr xrender xshape"
    if option !X; then
        prefix="-no"
    fi
    for o in ${X_options}; do
        myconf+=" ${prefix}-${o}"
    done

    myconf+=(
        -no-sql-ibase
        -no-sql-odbc
        $(qt4_enable mysql sql-mysql plugin "")
        $(option mysql      && echo "-I/usr/include/mysql -L/usr/$(get_libdir)/mysql/")
        $(qt4_enable postgresql sql-psql plugin "")
        $(option postgresql && echo '-I/usr/include/postgresql/server/')
        $(qt4_enable sqlite sql-sqlite plugin "" -system-sqlite)
        -no-sql-sqlite2
    )

    # media formats
    myconf+=(
        $(qt4_enable X gif qt)
        $(qt4_enable X libjpeg system)
        $(qt4_enable X libmng system)
        $(qt4_enable X libpng system)
        $(qt4_enable X svg)
        $(qt4_enable X libtiff system)
    )

    # optional parts
    if option !demos; then
        myconf+=( -nomake demos )
    fi
    if option !doc; then
        myconf+=( -nomake docs )
    fi
    if option !examples; then
        myconf+=( -nomake examples )
    fi

    qconf4 ${myconf[@]}
}

qt-4_src_install() {
    default

    local lib libdir=$(get_libdir)
    # remove build dir from libraries
    sed -i -e "s:${WORK}/lib:/usr/${libdir}/qt4:g" "${IMAGE}"/usr/${libdir}/qt4/{*.la,*.prl,pkgconfig/*.pc} \
        || die "Failed to remove build dir from libraries"

    # move pkgconfig files out of qt4/ dir
    mv "${IMAGE}"/usr/${libdir}/qt4/pkgconfig "${IMAGE}"/usr/${libdir}/ || die "Failed to move pkgconfig dir"

    # install symlinks to Qt4 versions of executables that Qt3 also provides. Some buildsystems would fail to find the Qt4 versions without these
    for i in assistant designer linguist lrelease lupdate moc qmake qtconfig uic; do
        dosym /usr/bin/${i} /usr/bin/${i}-qt4
    done

    keepdir /etc/qt4

    hereenvd 44qt4 <<EOF
LDPATH=/usr/$(get_libdir)/qt4
EOF
    #  only needed for <qt-4.6.0-beta1
    if option doc && ! ever at_least 4.6.0-beta1 ; then
        dobin "${WORK}/tools/qdoc3/qdoc3"
    fi

}

