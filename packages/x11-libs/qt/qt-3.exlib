# Copyright 2008 Ingmar Vanhassel <ingmar@exherbo.org>
# Copyright 2008 Bernd Steinhauser <berniyh@exherbo.org>
# Distributed under the terms of the GNU General Public License v2
# Based in part upon 'qt4.eclass' copyrighted to Gentoo Foundation.
#
# Original authors:
#   Caleb Tennis <ctennis@gentoo.org>
#   Bo Ã˜rsted Andresen <zlin@gentoo.org>
#   Ingmar Vanhassel <ingmar@gentoo.org>

require multilib flag-o-matic toolchain-funcs options

SRC_TYPE="free"
DOWNLOADS="ftp://ftp.trolltech.com/${PN}/source/${PN}-x11-${SRC_TYPE}-${PV}.tar.bz2"
BUGS_TO="kde@exherbo.org"

WORK="${WORKBASE}/${PN}-x11-${SRC_TYPE}-${PV}"

export_exlib_phases pkg_pretend pkg_setup src_prepare src_configure \
    src_compile src_install 

OPTION_DEPENDENCIES="
    sql? ( any-of: mysql sqlite postgresql )
    mysql? ( sql )
    sqlite? ( sql )
    postgresql? ( sql )
"

set_platform() {
    CXX=$(tc-getCXX)

    case ${CXX} in
        *g++*) platform_cxx="g++" ;;
        *icpc*) platform_cxx="icc" ;;
        *) die 'Unknown or unsupported compiler' ;;
    esac

    case ${CHOST} in
        *-linux-*|*-linux) platform_name="linux" ;;
        *) die 'Unknown or unsupported platform/OS' ;;
    esac

    platform="${platform_name}-${platform_cxx}"
}

qt-3_pkg_pretend() {
    options_pkg_pretend
    set_platform
}

qt-3_pkg_setup() {
    set_platform
    libdir=$(get_libdir)

    QTPREFIX="/usr"
    QTBASEDIR="${QTPREFIX}/qt/3"
    QTBINDIR="${QTBASEDIR}/bin"
    QTLIBDIR="${QTBASEDIR}/${libdir}"
    QTDOCDIR="${QTPREFIX}/share/doc/${PNVR}"
    QTHEADERDIR="${QTBASEDIR}/include"
    QTPLUGINDIR="${QTBASEDIR}/plugins"
    QTDATADIR="${QTPREFIX}/share/qt3"
    QTTRANSLATIONDIR="${QTBASEDIR}/translations"
    QTSYSCONFDIR="${QTBASEDIR}/etc/settings"
}

qt-3_src_prepare() {
    default_src_prepare

    sed -e "s:/lib$:/${libdir}:" \
        -i mkspecs/${platform}*/qmake.conf || die 'sed for libdir failed'

    sed -e "s:\(^QMAKE_CC[[:space:]]*=\).*:\1 $(tc-getCC):" \
        -e "s:\(^QMAKE_CXX[[:space:]]*=\).*:\1 $(tc-getCXX):" \
        -e "s:\(^QMAKE_LINK[[:space:]]*=\).*:\1 $(tc-getCXX):" \
        -e "s:\(^QMAKE_LINK_SHLIB[[:space:]]*=\).*:\1 $(tc-getCXX):" \
        -e "s:\(^QMAKE_CFLAGS[[:space:]]*=\).*:\1:" \
        -e "s:\(^QMAKE_CFLAGS_RELEASE[[:space:]]*=\).*:\1 ${CFLAGS}:" \
        -e "s:\(^QMAKE_CXXFLAGS_RELEASE[[:space:]]*=\).*:\1 ${CXXFLAGS}:" \
        -e "s:\(^QMAKE_LFLAGS_RELEASE[[:space:]]*=\).*:\1 ${LDFLAGS}:" \
        -e "s:\(^QMAKE_RPATH[[:space:]]*=\).*:\1:" \
        -i mkspecs/${platform}*/qmake.conf || die 'sed for user-defined {C,CXX}FLAGS failed'

    sed -e 's:read[[:space:]]*acceptance:acceptance=yes:' \
        -i configure || die 'sed for license acceptance failed'

    cat <<-EOF > "${TEMP}"/45qt3
QTDIR=${QTBASEDIR}
PATH=${QTBASEDIR}/bin
ROOTPATH=${QTBASEDIR}/bin
LDPATH=${QTBASEDIR}/$(get_libdir)
QMAKESPEC=${platform}
MANPATH=${QTBASEDIR}/doc/man
PKG_CONFIG_PATH=${QTBASEDIR}/$(get_libdir)/pkgconfig
EOF
}

myoption() {
    local flag=${1} feature=${2:-${1}} enablevalue=${3}
    [[ -n ${enablevalue} ]] && enablevalue+="-"
    if option ${flag}; then
        echo "-${enablevalue}${feature}"
    else   
        echo "-no-${feature}"
    fi
}

qt-3_src_configure() {
    # append-flags -fno-strict-aliasing

    # -no-pch gif png zlib
    STATIC_CONFIGURE_PARAMS="-dlopen-opengl -fast -largefile -shared -sm -stl -tablet -thread -verbose"
    STATIC_CONFIGURE_PARAMS+=" -xcursor -xft -xkb -xrandr -xrender -no-sql-ibase -no-sql-odbc"
    STATIC_CONFIGURE_PARAMS+=" -system-libjpeg -system-libmng -system-libpng -system-zlib"
    STATIC_CONFIGURE_PARAMS+=" -qt-gif -qt-imgfmt-jpeg -qt-imgfmt-mng -qt-imgfmt-png"

    # -platform=host, -xplatform=target
    PLATFORM_CONFIGURE_PARAMS="-platform ${platform} -xplatform ${platform}"
    PLATFORM_CONFIGURE_PARAMS+=" -prefix ${QTBASEDIR} -bindir ${QTBINDIR} -libdir ${QTLIBDIR}"
    PLATFORM_CONFIGURE_PARAMS+=" -docdir ${QTDOCDIR} -headerdir ${QTHEADERDIR}"
    PLATFORM_CONFIGURE_PARAMS+=" -plugindir ${QTPLUGINDIR} -datadir ${QTDATADIR}"
    PLATFORM_CONFIGURE_PARAMS+=" -translationdir ${QTTRANSLATIONDIR} -sysconfdir ${QTSYSCONFDIR}"
    PLATFORM_CONFIGURE_PARAMS+=" -L/usr/${libdir}"

    CONFIGURE_OPTIONS="$(option debug && echo '-debug' || echo '-release -no-g++-exceptions')"
    CONFIGURE_OPTIONS+=" $(option opengl && echo '-enable-module=opengl' || echo '-disable-opengl')"
    CONFIGURE_OPTIONS+=" $(myoption cups)"
    CONFIGURE_OPTIONS+=" $(myoption ipv6)"
    CONFIGURE_OPTIONS+=" $(myoption xinerama)"
    CONFIGURE_OPTIONS+=" $(myoption mysql sql-mysql plugin)" # -I,-L
    CONFIGURE_OPTIONS+=" $(option mysql      && echo '-I/usr/include/mysql -L/usr/$(get_libdir)/mysql/')"
    CONFIGURE_OPTIONS+=" $(myoption postgresql sql-psql plugin)"
    CONFIGURE_OPTIONS+=" $(option postgresql && echo '-I/usr/include/postgresql/server/')"
    CONFIGURE_OPTIONS+=" $(myoption sqlite sql-sqlite plugin)"

    if option !doc; then
        echo "INSTALLS -= htmldocs" >> ./src/qt_install.pri || die "Disabling apidocs failed"
    fi

    echo "./configure ${STATIC_CONFIGURE_PARAMS} ${PLATFORM_CONFIGURE_PARAMS} ${CONFIGURE_OPTIONS}"
    ./configure ${STATIC_CONFIGURE_PARAMS} ${PLATFORM_CONFIGURE_PARAMS} ${CONFIGURE_OPTIONS} \
        || die './configure failed'
}

qt-3_src_compile() {
    export SYSCONF="${IMAGE}"${QTBASE}/etc/settings

    emake src-qmake src-moc sub-src

    export DYLD_LIBRARY_PATH="${WORK}/lib:${DYLD_LIBRARY_PATH}"
    export LD_LIBRARY_PATH="${WORK}/lib:${LD_LIBRARY_PATH}"

    emake sub-tools
    option examples && emake sub-tutorial sub-examples
    # msg2qm,qembed
}

qt-3_src_install() {
    DEFAULT_SRC_INSTALL_PARAMS+=( INSTALL_ROOT="${IMAGE}" )
    default

    dodir /etc/env.d
    doenvd "${TEMP}"/45qt3

    dodir ${QTSYSCONFDIR}
    keepdir ${QTSYSCONFDIR}

    doman doc/man/man1/*

    # Unneeded & broken symlink to ${WORKBASE}
    rm "${IMAGE}/usr/share/qt3/mkspecs/linux-g++/linux-g++"
}

