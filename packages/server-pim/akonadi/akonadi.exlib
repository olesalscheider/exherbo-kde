# Copyright 2008,2010 Bernd Steinhauser <berniyh@exherbo.org>
# Distributed under the terms of the GNU General Public License v2
# Based in part upon 'akonadi-server-scm.kdebuild-1' from Genkdesvn, which is:
# Copyright 2007-2008 by the individual contributors of the genkdesvn project
# Based in part upon the respective ebuild in Gentoo which is:
# Copyright 1999-2008 Gentoo Foundation

require cmake

SUMMARY="The server part of Akonadi"
HOMEPAGE="http://www.akonadi-project.org/"
DOWNLOADS="http://download.akonadi-project.org/${PNV}.tar.bz2"

LICENCES="LGPL-2.1"
SLOT="0"

DEPENDENCIES="
    build:
        kde/automoc4[>=0.9.87]
    build+run:
        dev-libs/boost      [[ note = [ Akonadi uses the program_options library ] ]]
        dev-libs/libxslt
        x11-misc/shared-mime-info[>=0.23]
"

# FIXME MySQL, PostgreSQL and SQLITE Support should be optional. Since it's automagic, hard depend
# on MySQL and SQLITE (patch required)
# FIXME Either make PostgreSQL optional or disable it completely (both require a patch)

if ever at_least 1.3.80 ; then
    DEPENDENCIES+="
        build+run:
            dev-db/sqlite[>=3.6.23]"
fi

# See FIXME above
#        (
#            mysql [[ descripton = [ Build the mysql backend ] ]]
#            postgresql [[ descripton = [ Build the postgresql backend ] ]]
#            sqlite [[ descripton = [ Build the sqlite backend ] ]]
#        ) [[ number-selected = at-least-one ]]
if ever at_least 1.4.90 ; then
    MYOPTIONS="
        strigi [[ description = [ Use strigi as the search engine. Otherwise soprano is used. ] ]]
    "
    DEPENDENCIES+="
        build+run:
            x11-libs/qt:4[>=4.6.0][dbus][mysql][sql][sqlite]
            strigi? ( app-pim/strigi )
            !strigi? ( dev-libs/soprano )
    "
else
    MYOPTIONS=""
    DEPENDENCIES+="
        build+run:
            dev-db/mysql
            dev-libs/soprano
            x11-libs/qt:4[>=4.6.0][dbus][mysql][sql]
    "
fi

CMAKE_SRC_CONFIGURE_PARAMS+=(
    -DAKONADI_BUILD_TESTS:BOOL=TRUE
)

# See FIXME above
#        if option sqlite; then
#            CMAKE_SRC_CONFIGURE_PARAMS+=( -DDATABASE_BACKEND=SQLITE )
#        elif option mysql; then
#            CMAKE_SRC_CONFIGURE_PARAMS+=( -DDATABASE_BACKEND=MYSQL )
#        elif option postgresql; then
#            CMAKE_SRC_CONFIGURE_PARAMS+=( -DDATABASE_BACKEND=POSTGRES )
#        fi
src_configure() {
    if ever at_least 1.4.90; then
        if option strigi; then
            CMAKE_SRC_CONFIGURE_PARAMS+=( DAKONADI_USE_STRIGI_SEARCH:BOOL=TRUE )
        else
            CMAKE_SRC_CONFIGURE_PARAMS+=( DAKONADI_USE_STRIGI_SEARCH:BOOL=FALSE )
        fi
    fi
    cmake_src_configure
}

