From e1987c28afb8dd56091b180c8f9acf413a68a39e Mon Sep 17 00:00:00 2001
From: Ingmar Vanhassel <ingmar@exherbo.org>
Date: Sun, 21 Jun 2009 03:18:57 +0200
Subject: [PATCH 2/3] Unsafe temp file creation, Debian #320541

Extracted from http://patch-tracking.debian.net/package/uudeview/0.5.20-3
---
 uulib/uulib.c    |   17 ++++++++++++++---
 uulib/uunconc.c  |    9 ++++++---
 uulib/uuscan.c   |    8 ++++----
 uulib/uustring.c |    1 +
 uulib/uustring.h |    1 +
 5 files changed, 26 insertions(+), 10 deletions(-)

diff --git a/uulib/uulib.c b/uulib/uulib.c
index 1bf29b9..ad7283f 100644
--- a/uulib/uulib.c
+++ b/uulib/uulib.c
@@ -872,7 +872,10 @@ UUDecodeToTemp (uulist *thefile)
 }
 
 /*
- * decode file first to temp file, then copy it to a final location
+ * Decode file first to temp file, then copy it to a final location.
+ * A move is preferable to a copy.  If the file is on the same
+ * partition, no copy is performed.  This is important for large
+ * files.
  */
 
 int UUEXPORT
@@ -978,6 +981,12 @@ UUDecodeFile (uulist *thefile, char *destname)
     return UURET_IOERR;
   }
 
+  if (rename(thefile->binfile, uugen_fnbuffer) == 0) {
+    fclose(source);
+    close(fildes);
+    goto finish_ok;
+  }
+
   if ((target = fdopen (fildes, "wb")) == NULL) {
     progress.action = 0;
     UUMessage (uulib_id, __LINE__, UUMSG_ERROR,
@@ -1042,6 +1051,8 @@ UUDecodeFile (uulist *thefile, char *destname)
 	       thefile->binfile,
 	       strerror (uu_errno = errno));
   }
+
+ finish_ok:
   _FP_free (thefile->binfile);
   thefile->binfile = NULL;
   thefile->state  &= ~UUFILE_TMPFILE;
@@ -1103,9 +1114,9 @@ UUInfoFile (uulist *thefile, void *opaque,
 
   while (!feof (inpfile) && 
 	 (uu_fast_scanning || ftell(inpfile) < maxpos)) {
-    if (_FP_fgets (uugen_inbuffer, 511, inpfile) == NULL)
+    if (_FP_fgets (uugen_inbuffer, 1023, inpfile) == NULL)
       break;
-    uugen_inbuffer[511] = '\0';
+    uugen_inbuffer[1023] = '\0';
 
     if (ferror (inpfile))
       break;
diff --git a/uulib/uunconc.c b/uulib/uunconc.c
index e5649fe..b94ebf2 100644
--- a/uulib/uunconc.c
+++ b/uulib/uunconc.c
@@ -1325,9 +1325,9 @@ UUDecode (uulist *data)
     return UURET_NODATA;
 
   if (data->uudet == PT_ENCODED)
-    mode = "wt";	/* open text files in text mode */
+    mode = "wtx";	/* open text files in text mode */
   else
-    mode = "wb";	/* otherwise in binary          */
+    mode = "wbx";	/* otherwise in binary          */
 
   if ((data->binfile = tempnam (NULL, "uu")) == NULL) {
     UUMessage (uunconc_id, __LINE__, UUMSG_ERROR,
@@ -1437,6 +1437,9 @@ UUDecode (uulist *data)
 	res = UURET_IOERR;
 	break;
       }
+      UUMessage (uunconc_id, __LINE__, UUMSG_MESSAGE,
+		 uustring (S_OPEN_FILE),
+		 iter->data->sfname);
       _FP_strncpy (uugen_fnbuffer, iter->data->sfname, 1024);
     }
 
@@ -1502,7 +1505,7 @@ UUDecode (uulist *data)
       progress.action = 0;
       return UURET_NOMEM;
     }
-    if ((datain = fopen (data->binfile, "rb")) == NULL) {
+    if ((datain = fopen (data->binfile, "rbx")) == NULL) {
       UUMessage (uunconc_id, __LINE__, UUMSG_ERROR,
 		 uustring (S_NOT_OPEN_FILE),
 		 data->binfile, strerror (uu_errno = errno));
diff --git a/uulib/uuscan.c b/uulib/uuscan.c
index f89fa0b..f487b1e 100644
--- a/uulib/uuscan.c
+++ b/uulib/uuscan.c
@@ -387,10 +387,10 @@ ParseValue (char *attribute)
 	   *attribute != '(' && *attribute != ')' &&
 	   *attribute != '<' && *attribute != '>' &&
 	   *attribute != '@' && *attribute != ',' &&
-	   /* *attribute != ';' && */ *attribute != ':' &&
-	   *attribute != '\\' &&*attribute != '"' &&
-	   *attribute != '/' && /* *attribute != '[' &&
-	   *attribute != ']' && */ *attribute != '?' &&
+	   *attribute != ';' && *attribute != ':' &&
+	   *attribute != '\\' && *attribute != '"' &&
+	   *attribute != '/' && *attribute != '[' &&
+	   *attribute != ']' && *attribute != '?' &&
 	   *attribute != '=' && length < 255) {
       *ptr++ = *attribute++;
       length++;
diff --git a/uulib/uustring.c b/uulib/uustring.c
index 50bfc3d..8bd2165 100644
--- a/uulib/uustring.c
+++ b/uulib/uustring.c
@@ -107,6 +107,7 @@ static stringmap messages[] = {
   { S_MIME_B_NOT_FOUND, "Boundary expected on Multipart message but found EOF" },
   { S_MIME_MULTI_DEPTH, "Multipart message nested too deep" },
   { S_MIME_PART_MULTI,  "Handling partial multipart message as plain text" },
+  { S_OPEN_FILE,        "Opened file %s" },
 
   { 0, "" }
 };
diff --git a/uulib/uustring.h b/uulib/uustring.h
index 6c79256..52919f9 100644
--- a/uulib/uustring.h
+++ b/uulib/uustring.h
@@ -36,3 +36,4 @@
 #define S_MIME_B_NOT_FOUND    35
 #define S_MIME_MULTI_DEPTH    36
 #define S_MIME_PART_MULTI     37
+#define S_OPEN_FILE           38
-- 
1.6.3.2

