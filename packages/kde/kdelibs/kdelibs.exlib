# Copyright 2008 Ingmar Vanhassel <ingmar@exherbo.org>
# Distributed under the terms of the GNU General Public License v2

require kde.org-4

SUMMARY="KDE libraries"
LICENCES="GPL-2 LGPL-2.1 FDL-1.2"
DESCRIPTION="FIXME
"
# XXX Add cpu flags, acl alsa(?) jpeg2k kerberos openexr zeroconf
MYOPTIONS="doc fam opengl spell ssl"

# XXX   build: x11-proto/*
#       sys-devel/gettext?
DEPENDENCIES="
    build:
        dev-cpp/cppunit
        dev-util/pkg-config
        kde/automoc4
        x11-proto/xf86vidmodeproto
        doc? ( app-doc/doxygen )
    build+run:
        >=app-pim/strigi-0.5.11
        dev-libs/libpcre
        dev-libs/libxml2
        dev-libs/libxslt
        dev-libs/soprano [[ note = [ Need soprano's clucene support enabled ] ]]
        >=sys-sound/alsa-lib-1.0.14a
        media-libs/fontconfig
        media-libs/freetype:2
        media-libs/giflib
        media-libs/jpeg
        media-libs/libpng
        media-libs/phonon
        sys-apps/dbus [[ note = [ Need dbus with X support ] ]]
        x11-libs/libICE
        x11-libs/libSM
        x11-libs/libX11
        x11-libs/libXau
        x11-libs/libXcursor
        x11-libs/libXdmcp
        x11-libs/libXext
        x11-libs/libXfixes
        x11-libs/libXft
        x11-libs/libXpm
        x11-libs/libXrender
        x11-libs/libXt
        x11-libs/libXtst
        x11-libs/qt:4[opengl?]
        x11-misc/shared-mime-info
        fam? ( app-admin/gamin )
        spell? (
            app-text/aspell
            app-text/enchant
        )
        ssl? ( dev-libs/openssl )
    run:
        x11-apps/iceauth
        x11-apps/rgb"

CMAKE_SRC_CONFIGURE_PARAMS+=(
    # Libintl
    -DKDE_DEFAULT_HOME=.kde4
    -DKDE_DISTRIBUTION_TEXT="Exherbo Linux"
    -DWITH_ACL=OFF
    -DWITH_Avahi=OFF -DWITH_DNSSD=OFF
    -DWITH_BZip2=ON
    -DWITH_GSSAPI=OFF
    -DWITH_HSPELL=OFF
    -DWITH_Jasper=OFF
    -DWITH_OpenEXR=OFF
    -DWITH_Soprano=ON
)
CMAKE_SRC_CONFIGURE_OPTION_WITHS+=(
    fam
    'opengl OpenGL'
    'spell ASPELL'
    'spell ENCHANT'
    'ssl OpenSSL'
)

src_prepare() {
    default
    # Kate tests need a tarball from SVN
    sed -e '/^[^#]*add_custom_target[([:space:]]*check/s/^/# DONOTRUN /' -i kate/CMakeLists.txt || die 'FAIL'
}

src_compile() {
    cmake_src_compile
    
    if option doc; then
        pushd "${S}/doc/api"
        echo ./doxygen.sh "${S}"
        ./doxygen.sh "${S}" || die "Generating API documentation failed."
        popd
    fi
}

src_install() {
    keepdir ${KDE_INSTALL_PREFIX}/share/services

    cmake_src_install

    if option doc; then
        pushd "${S}/doc/api"
        insinto /usr/share/doc/${PF}/apidocs
        doins -r ${P}-apidocs/*
        popd
    fi

    # Update when KDE_INSTALL_PREFIX != '/usr'
    cat <<EOF > "${T}"/44kde-${SLOT} # Number goes _down_ for a new KDE major version
CONFIG_PROTECT="${KDE_INSTALL_PREFIX}/share/config ${KDE_INSTALL_PREFIX}/shutdown"
KDEDIRS="/usr/local:${KDE_INSTALL_PREFIX}"
XDG_DATA_DIRS="/usr/local/share:${KDE_INSTALL_PREFIX}/share"
COLON_SEPARATED="XDG_DATA_DIRS"
EOF
    doenvd "${T}"/44kde-${SLOT}
}

pkg_postinst() {
    [[ -z ${XDG_DATA_DIRS} ]] \
        && echo "XDG_DATA_DIRS is unset, defaulting to XDG_DATA_DIRS='/usr/local/share:${KDE_INSTALL_PREFIX}/share'"
    [[ -z ${KDEDIRS} ]] \
        && echo "KDEDIRS is unset, defaulting to KDEDIRS='/usr/local:${KDE_INSTALL_PREFIX}'"
    export XDG_DATA_DIRS="${XDG_DATA_DIRS:-/usr/local/share:${KDE_INSTALL_PREFIX}/share}"
    export KDEDIRS="${KDEDIRS:-/usr/local:${KDE_INSTALL_PREFIX}}"

    kde.org-4_pkg_postinst
}

pkg_postrm() {
    # Don't run /usr/bin/kbuildsycoca4, we just uninstalled it
    :
}

