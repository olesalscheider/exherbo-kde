Upstream: yes

From 049113e719dd2fc4446d054fa1a3aada330094f0 Mon Sep 17 00:00:00 2001
From: Alex Merry <alex.merry@kde.org>
Date: Sat, 29 Mar 2014 12:10:23 +0000
Subject: [PATCH] Explicitly declare exported interfaces of libraries

This is (a) generally a good idea, and (b) necessary with CMake
2.8.12.0, which defaults to PRIVATE linkage (when CMP0022 is NEW) if no
keywords are given to target_link_libraries().
---
 .../dataengines/geolocation/CMakeLists.txt         | 10 ++++++--
 .../dataengines/systemmonitor/CMakeLists.txt       |  1 +
 plasma-workspace/libkworkspace/CMakeLists.txt      | 15 ++++++++---
 plasma-workspace/libtaskmanager/CMakeLists.txt     | 30 ++++++++++++----------
 .../libtaskmanager/abstractgroupableitem.h         |  2 --
 plasma-workspace/libtaskmanager/groupmanager.cpp   |  1 +
 plasma-workspace/libtaskmanager/groupmanager.h     |  2 --
 plasma-workspace/libtaskmanager/taskmanager.h      |  2 +-
 8 files changed, 39 insertions(+), 24 deletions(-)

diff --git a/plasma-workspace/dataengines/geolocation/CMakeLists.txt b/plasma-workspace/dataengines/geolocation/CMakeLists.txt
index d6ede1e..8b2dc3b 100644
--- a/plasma-workspace/dataengines/geolocation/CMakeLists.txt
+++ b/plasma-workspace/dataengines/geolocation/CMakeLists.txt
@@ -4,7 +4,13 @@ project(geolocation)
 
 set(plasma_geolocation_interface_SRCS geolocationprovider.cpp)
 add_library(plasma-geolocation-interface SHARED ${plasma_geolocation_interface_SRCS})
-target_link_libraries(plasma-geolocation-interface KF5::KIOCore KF5::Plasma)
+target_link_libraries(plasma-geolocation-interface
+    PUBLIC
+        Qt5::Core
+        KF5::Plasma
+    PRIVATE
+        KF5::KIOCore
+)
 set_target_properties(plasma-geolocation-interface PROPERTIES
    VERSION ${GENERIC_LIB_VERSION}
    SOVERSION ${GENERIC_LIB_SOVERSION}
@@ -40,7 +46,7 @@ install(FILES plasma-geolocationprovider.desktop DESTINATION ${SERVICETYPES_INST
 
 set(plasma_geolocation_ip_SRCS location_ip.cpp)
 add_library(plasma-geolocation-ip MODULE ${plasma_geolocation_ip_SRCS})
-target_link_libraries(plasma-geolocation-ip plasma-geolocation-interface)
+target_link_libraries(plasma-geolocation-ip plasma-geolocation-interface KF5::KIOCore)
 install(FILES plasma-geolocation-ip.desktop DESTINATION ${SERVICES_INSTALL_DIR})
 install(TARGETS plasma-geolocation-ip DESTINATION ${PLUGIN_INSTALL_DIR}/plasma/geolocationprovider)
 
diff --git a/plasma-workspace/dataengines/systemmonitor/CMakeLists.txt b/plasma-workspace/dataengines/systemmonitor/CMakeLists.txt
index e34ad03..118bdcf 100644
--- a/plasma-workspace/dataengines/systemmonitor/CMakeLists.txt
+++ b/plasma-workspace/dataengines/systemmonitor/CMakeLists.txt
@@ -10,6 +10,7 @@ target_link_libraries(plasma_engine_systemmonitor
     KF5::Plasma
     KF5::Service
     KF5::SysGuard
+    KF5::KDE4Support
 )
 
 kservice_desktop_to_json(plasma_engine_systemmonitor plasma-dataengine-systemmonitor.desktop)
diff --git a/plasma-workspace/libkworkspace/CMakeLists.txt b/plasma-workspace/libkworkspace/CMakeLists.txt
index cc3ea36..2848a65 100644
--- a/plasma-workspace/libkworkspace/CMakeLists.txt
+++ b/plasma-workspace/libkworkspace/CMakeLists.txt
@@ -25,16 +25,23 @@ set_target_properties(kworkspace PROPERTIES
                       )
 
 generate_export_header(kworkspace)
-target_link_libraries(kworkspace Qt5::DBus Qt5::Core
-                                 KF5::I18n KF5::WindowSystem KF5::Plasma
-                                 Xau)
+target_link_libraries(kworkspace
+    PUBLIC
+        Qt5::Core
+    PRIVATE
+        Qt5::DBus
+        KF5::I18n
+        KF5::WindowSystem
+        KF5::Plasma
+        Xau
+)
 target_include_directories(kworkspace PUBLIC "$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>"
                                       INTERFACE "$<INSTALL_INTERFACE:${INCLUDE_INSTALL_DIR}/kworkspace>" )
 
 configure_file(config-libkworkspace.h.cmake ${CMAKE_CURRENT_BINARY_DIR}/config-libkworkspace.h)
 
 if(X11_FOUND)
-    target_link_libraries(kworkspace Qt5::X11Extras ${X11_LIBRARIES})
+    target_link_libraries(kworkspace PRIVATE Qt5::X11Extras ${X11_LIBRARIES})
 endif()
 
 write_basic_config_version_file(${CMAKE_CURRENT_BINARY_DIR}/LibKWorkspaceConfigVersion.cmake VERSION
diff --git a/plasma-workspace/libtaskmanager/CMakeLists.txt b/plasma-workspace/libtaskmanager/CMakeLists.txt
index 4a34ca9..94431d7 100644
--- a/plasma-workspace/libtaskmanager/CMakeLists.txt
+++ b/plasma-workspace/libtaskmanager/CMakeLists.txt
@@ -39,26 +39,30 @@ add_library(PW::LibTaskManager ALIAS taskmanager)
 generate_export_header(taskmanager)
 target_include_directories(taskmanager PUBLIC "$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>" "$<INSTALL_INTERFACE:${INCLUDE_INSTALL_DIR}/taskmanager>")
 target_link_libraries(taskmanager
-    KF5::ProcessCore
-    KF5::ConfigCore
-    KF5::ConfigWidgets
-    KF5::IconThemes
-    KF5::I18n
-    KF5::KIOCore
-    KF5::KIOWidgets # KRun
-    KF5::Service
-    KF5::WindowSystem
+    PUBLIC
+        Qt5::Core
+        Qt5::Gui
+        KF5::WindowSystem # KStartupInfo
+    PRIVATE
+        KF5::ProcessCore
+        KF5::ConfigCore
+        KF5::ConfigWidgets
+        KF5::IconThemes
+        KF5::I18n
+        KF5::KIOCore
+        KF5::KIOWidgets # KRun
+        KF5::Service
 )
 if (X11_FOUND)
-    target_link_libraries(taskmanager ${Qt5X11Extras_LIBRARIES} ${X11_LIBRARIES})
+    target_link_libraries(taskmanager PRIVATE ${Qt5X11Extras_LIBRARIES} ${X11_LIBRARIES})
     if (X11_Xfixes_FOUND)
-    target_link_libraries(taskmanager ${X11_Xfixes_LIB})
+    target_link_libraries(taskmanager PRIVATE ${X11_Xfixes_LIB})
     endif ()
     if (X11_Xrender_FOUND)
-    target_link_libraries(taskmanager ${X11_Xrender_LIB})
+    target_link_libraries(taskmanager PRIVATE ${X11_Xrender_LIB})
     endif ()
     if (X11_Xcomposite_FOUND)
-    target_link_libraries(taskmanager ${X11_Xcomposite_LIB})
+    target_link_libraries(taskmanager PRIVATE ${X11_Xcomposite_LIB})
     endif ()
 endif()
 
diff --git a/plasma-workspace/libtaskmanager/abstractgroupableitem.h b/plasma-workspace/libtaskmanager/abstractgroupableitem.h
index 119f929..fa7e7c1 100644
--- a/plasma-workspace/libtaskmanager/abstractgroupableitem.h
+++ b/plasma-workspace/libtaskmanager/abstractgroupableitem.h
@@ -28,8 +28,6 @@ CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 #include <QtCore/QUrl>
 #include <QtGui/QIcon>
 
-#include <KWindowSystem>
-
 #include "taskmanager.h"
 #include "taskmanager_export.h"
 
diff --git a/plasma-workspace/libtaskmanager/groupmanager.cpp b/plasma-workspace/libtaskmanager/groupmanager.cpp
index 804a03e..83b39ef 100644
--- a/plasma-workspace/libtaskmanager/groupmanager.cpp
+++ b/plasma-workspace/libtaskmanager/groupmanager.cpp
@@ -31,6 +31,7 @@ CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 #include <QFile>
 #include <QDebug>
 
+#include <KConfigGroup>
 #include <KService>
 #include <KSycoca>
 #include <KDesktopFile>
diff --git a/plasma-workspace/libtaskmanager/groupmanager.h b/plasma-workspace/libtaskmanager/groupmanager.h
index a337de6..76b661e 100644
--- a/plasma-workspace/libtaskmanager/groupmanager.h
+++ b/plasma-workspace/libtaskmanager/groupmanager.h
@@ -26,8 +26,6 @@ CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 
 #include <QtCore/QObject>
 
-#include <KConfigGroup>
-
 #include <abstractgroupableitem.h>
 #include <task.h>
 #include <taskitem.h>
diff --git a/plasma-workspace/libtaskmanager/taskmanager.h b/plasma-workspace/libtaskmanager/taskmanager.h
index a139986..e6ca735 100644
--- a/plasma-workspace/libtaskmanager/taskmanager.h
+++ b/plasma-workspace/libtaskmanager/taskmanager.h
@@ -29,7 +29,7 @@ CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 #include <QSet>
 #include <QVector>
 
-#include <KWindowSystem>
+#include <KStartupInfo>
 
 class QUuid;
 
-- 
1.9.1

