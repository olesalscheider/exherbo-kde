# Copyright 2013 Heiko Becker <heirecka@exherbo.org>
# Distributed under the terms of the GNU General Public License v2
# Based in part upon 'kdenetwork.exlib', which is:
#     Copyright 2008-2009, 2010, 2011, 2012 Ingmar Vanhassel
#     Copyright 2008-2011 Bo Ã˜rsted Andresen

require kde.org

SUMMARY="Multi-protocol instant messaging client with various plugins for extra functionality"
DESCRIPTION="It supports AIM, ICQ, Windows Live Messenger, Yahoo, Jabber, Gadu-Gadu,
Novell GroupWise Messenger, and more. It is designed to be a flexible and extensible
multi-protocol system suitable for personal and enterprise use."

LICENCES="GPL-2 LGPL-2.1 FDL-1.2"

MY_IM_PROTOCOLS+="
    gadu       [[ description = [ Enable Kopete Gadu-Gadu protocol ] ]]
    googletalk [[ description = [ Voice calls over the Google Talk protocol ]
                  requires = [ im_protocols: xmpp ]  ]]
    groupwise  [[ description = [ Enable Novell GroupWise Messenger protocol ] ]]
    meanwhile  [[ description = [ Enable Sametime protocol ] ]]
    yahoo      [[ description = [ Add support for the Yahoo messenger protocol ] ]]
    wlm        [[ description = [ Add support for the Windows Live Messenger protocol ] ]]
    xmpp       [[ description = [ Enable Kopete Jabber protocol ] ]]
"
# disabled by umstream
#    jingle     [[ description = [ Voice calls over Jabber ]
#                  requires = [ im_protocols: xmpp ] ]]
# requires jingle, so also disable it
#    ilbc       [[ description = [ iLBC codec support for voice calls over Jabber ]
#                  requires = [ im_protocols: jingle ] ]]
MY_KOPETE_PLUGINS+="
    history2    [[ description = [ New SQLite based history plugin ] ]]
    otr         [[ description = [ Off-the-Record encryption plugin for Kopete ] ]]
    statistics  [[ description = [ Statistics plugin for Kopete ] ]]
    webpresence [[ description = [ WebPresence plugin for Kopete ] ]]
    wlm_voice   [[ description = [ Voice clips support in Windows Live Messenger Kopete plugin ]
                   requires = [ im_protocols: wlm ] ]]
"
ever at_least 4.12.0 && MY_KOPETE_PLUGINS+="
    cryptography [[ description = [ Encrypts and signs messages using OpenPGP ] ]]
    nowlistening [[ description = [ Displays the song you currently listen to in your status ] ]]
"

MYOPTIONS="
    im_protocols: ( ${MY_IM_PROTOCOLS} )
    kopete_plugins: ( ${MY_KOPETE_PLUGINS} )"

DEPENDENCIES="
    build+run:
        kde/kdelibs:${SLOT}
        kde/kdepimlibs:${SLOT} [[ note = [ QGpgME for crypto plugin ] ]]
        kde/qimageblitz
        media-libs/phonon
        media-libs/v4l-utils
        x11-libs/libX11
        x11-libs/libXScrnSaver
        im_protocols:gadu? ( net-im/libgadu[>=1.8.0] )
        im_protocols:groupwise? ( app-crypt/qca:2[>=2.0.0] )
        im_protocols:meanwhile? (
            dev-libs/glib:2
            net-libs/meanwhile
        )
        im_protocols:wlm? (
            media-libs/giflib
            net-libs/libmsn[>=4.0_beta2]
            kopete_plugins:wlm_voice? (
                media-libs/mediastreamer[>=2.3.0]
                net-libs/ortp[>=0.13]
            )
        )
        im_protocols:xmpp? (
            app-crypt/qca:2[>=2.0.0]
            net-dns/libidn
            im_protocols:googletalk? (
                dev-libs/expat
                dev-libs/jsoncpp
                dev-libs/openssl
                media-libs/mediastreamer[>=2.3.0]
                net-libs/libsrtp
                net-libs/ortp[>=0.13]
            )
        )
        im_protocols:yahoo? ( media-libs/jasper )
        kopete_plugins:history2? (
            dev-db/sqlite:3
            x11-libs/qt:4[sql]
        )
        kopete_plugins:statistics? (
            dev-db/sqlite:3
            x11-libs/qt:4[sql]
        )
        kopete_plugins:webpresence? (
            dev-libs/libxml2:2.0
            dev-libs/libxslt
        )
    suggestion:
        im_protocols:xmpp? (
            app-crypt/qca-ossl:2 [[ description = [ Necessary to make SSL secured xmpp connections with kopete ] ]]
        )
"
# build+run: im_protocols:jingle? ( net-libs/ortp[>=0.13] sys-sound/alsa-lib )
# run:       im_protocols:jingle? ( media-libs/speex )
# run:       im_protocols:ilbc? ( media-plugins/msilbc ) requires im_protocols:jingle

if ever at_least 4.12.0 ; then
    DEPENDENCIES+="
        build+run:
            kde/kdepim[kde_parts:kleopatra]
            im_protocols:wlm? ( dev-libs/boost )
            kopete_plugins:nowlistening? ( dev-libs/glib )
            kopete_plugins:otr? ( net-libs/libotr[>=4.0.0] )
    "
else
    DEPENDENCIES+="
        build+run:
            kopete_plugins:otr? ( net-libs/libotr[>=3.2.0&<4.0.0] )
    "
fi

CMAKE_SRC_CONFIGURE_PARAMS+=( -DWITH_Xmms=OFF )

src_configure() {
    # Kopete plugins with no extra dependencies
    my_kopete_plugins=(
        addbookmarks autoreplace contactnotes highlight history latex
        pipes privacy texteffect translator urlpicpreview
    )
    ever at_least 4.12.0 || my_kopete_plugins+=( nowlistening )

    # Kopete protocols with no extra dependencies
    my_kopete_protocols=( bonjour irc oscar qq skype sms testbed winpopup )
    for p in "${my_kopete_plugins[@]}" "${my_kopete_protocols[@]}"; do
        cmakeparams+=( -DWITH_${p}:BOOL=TRUE )
    done

     if option im_protocols:googletalk || option kopete_plugins:wlm_voice; then
        cmakeparams+=( -DWITH_Mediastreamer:BOOL=TRUE )
    else
        cmakeparams+=( -DWITH_Mediastreamer:BOOL=FALSE )
    fi
    # option im_protocols:jingle || ...
    if option im_protocols:googletalk || option kopete_plugins:wlm_voice; then
        cmakeparams+=( -DWITH_LiboRTP:BOOL=TRUE )
    else
        cmakeparams+=( -DWITH_LiboRTP:BOOL=FALSE )
    fi

    if option kopete_plugins:history2 || option kopete_plugins:statistics; then
        cmakeparams+=( -DWITH_Sqlite=ON )
    else
        cmakeparams+=( -DWITH_Sqlite=OFF )
    fi

    if ever at_least 4.12.0 ; then
        cmakeparams+=(
            $(cmake_with kopete_plugins:nowlistening)
        )
    fi

     ecmake \
        $(kde4_shared_cmake_params) \
        "${cmakeparams[@]}" \
        "${CMAKE_SRC_CONFIGURE_PARAMS[@]}" \
        $(cmake_with im_protocols:gadu) \
        $(cmake_with im_protocols:gadu Libgadu) \
        $(cmake_with im_protocols:GOOGLETALK) \
        $(cmake_with im_protocols:googletalk Expat) \
        $(cmake_with im_protocols:googletalk SSL) \
        $(cmake_with im_protocols:groupwise) \
        $(cmake_with im_protocols:meanwhile) \
        $(cmake_with im_protocols:meanwhile GLIB2) \
        $(cmake_with im_protocols:meanwhile LibMeanwhile) \
        $(cmake_with im_protocols:wlm GIF) \
        $(cmake_with im_protocols:xmpp IDN) \
        $(cmake_with im_protocols:xmpp jabber) \
        $(cmake_with im_protocols:yahoo) \
        $(cmake_with im_protocols:yahoo Jasper) \
        $(cmake_with kopete_plugins:history2) \
        $(cmake_with kopete_plugins:otr LibOTR) \
        $(cmake_with kopete_plugins:webpresence) \
        $(cmake_with kopete_plugins:webpresence LibXml2) \
        $(cmake_with kopete_plugins:webpresence LibXslt) \
        $(cmake_with kopete_plugins:wlm_voice WLM_MEDIASTREAMER)
        #$(cmake_with im_protocols:JINGLE) \
        #$(cmake_with im_protocols:jingle Alsa) \
        #$(cmake_with im_protocols:jingle Speex) \
}

