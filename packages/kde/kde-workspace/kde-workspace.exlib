# Copyright 2008, 2009, 2010, 2011, 2012 Ingmar Vanhassel <ingmar@exherbo.org>
# Copyright 2008-2011 Bo Ã˜rsted Andresen <zlin@exherbo.org>
# Distributed under the terms of the GNU General Public License v2

require python kde.org systemd-service

SUMMARY="The interface and basic tools for the KDE workspace"
DESCRIPTION="
appmenu: Application menu inside the window decoration
cursors: Custom KDE cursors
freespacenotifier: Monitors free disk space on the home directory
kcheckpass: Authentication program
kcminit: Executes initialization services during startup
kcontrol: The KDE Control Center
kdm: Display manager
khotkeys: Bind actions to triggers and conditions
kinfocenter: Information Center
klipper: X clipboard taskbar applet
kmenuedit: Menu editor
krunner: Quick launch applet
kscreensaver: Screensaver system
ksmserver: Session Manager
ksplash: Splash screen
kstartupconfig:
kstyles: Styles for KDE widgets
ksysguard: Task manager & system monitor
ksystraycmd: Run any command in the system tray
ktouchpadenabler: daemon listening to XF86XK_TouchpadToggle
kwin: Window manager
kwrited:
plasma: Desktop framework
powerdevil: KDE power management
screenlocker: a new screen locking mechanism based on QtQuick
solid: Seamless Hardware Interaction (only solid-actions-kcm left in 4.11.x)
statusnotifierwatcher: Module for the Status Notifier Specification
systemsettings: Settings utility
"

LICENCES="GPL-2 LGPL-2.1 FDL-1.2 BSD-3 [[ note = [ cmake scripts ] ]]"
# afs - option(KDE4_AFS "Compile KDM with AFS support" OFF) - requires kerberos
# captury; media-libs/libcaptury - Provides for video recording desktop effects in kwin <http://ninchens.de/projects/captury>
# kerberos - option(KDE4_KERBEROS4 "Compile KDM with Kerberos v4 support" OFF)
MYOPTIONS="ieee1394 lm_sensors python
    barcodes   [[ description = [ Create mobile barcodes from clipboard data ] ]]
    consolekit [[ description = [ Enable ConsoleKit integration for KDM sessions. If you're in group 'plugdev' and using Device Notifier, etc. you'll probably want this. ] ]]
    kf5-coinstall [[ description = [ Build a small subset of kde-workspace to allow for parallel installation with KF5 and Plasma-Next.
                Built are: Oxygen, libkdeworkspace, libtaskmanager, libkscreensaver, kdm and some minor stuff  ] ]]
    opengles   [[ description = [ Use the OpenGLES backend for desktop effects originally targeted at mobile devices. Disables the default OpenGL backend ] ]]
    qalculate  [[ description = [ Support advanced features of the calculator runner ] ]]
    systemd [[ description = [ logind support in KDM ] ]]
    wayland
    ( consolekit systemd ) [[ number-selected = exactly-one ]]
    ( ieee1394 lm_sensors python barcodes opengles qalculate wayland ) [[ *requires = -kf5-coinstall ]]
    x86_cpu_features: 3dnow mmx sse sse2
"
# cpu_features are for ksplash

# kwrited has an automagic dep on utempter which we don't have atm
DEPENDENCIES="
    build:
        dev-cpp/cppunit
        dev-lang/perl:* [[ note = kdm ]]
    build+run:
        user/kdm
        kde/kactivities:${SLOT}[>=${PV}]
        kde/kdelibs:${SLOT}[>=${PV}]
        kde/kde-pam [[ note = [ Currently pam is an automagic dependency. Hard-enabled until we have a proper patch for that. ] ]]
        kde/qimageblitz[>=0.0.4][qt4(+)]
        sys-apps/systemd [[ note = [ udev for UPower backend in PowerDevil ] ]]
        sys-libs/pam [[ note = [ Currently pam is an automagic dependency. Hard-enabled until we have a proper patch for that. ] ]]
        sys-libs/zlib
        x11-libs/libICE [[ note = ksmserver ]]
        x11-libs/libX11 [[ note = [ kdm ] ]]
        x11-libs/libXau [[ note = kdm ]]
        x11-libs/libXcomposite [[ note = kwin ]]
        x11-libs/libXdmcp [[ note = kdm ]]
        x11-libs/libXext [[ note = ksysguardd ]]
        x11-libs/libXfixes [[ note = [ kcontrol, XRender compositing backend in KWin ] ]]
        x11-libs/libXft [[ note = kcontrol ]]
        x11-libs/libXi[>=1.2] [[ note = kcontrol/keyboard/ktouchpadenabler ]]
        x11-libs/libxkbfile
        x11-libs/libXrandr[>=1.3] [[ note = [ Multi Screen Support ] ]]
        x11-libs/libXrender [[ note = kwin ]]
        x11-libs/libXtst [[ note = kcontrol ]]
        x11-libs/qt:4[>=4.8.0][opengl][webkit]
        (
            x11-dri/mesa
            x11-libs/libXcursor [[ note = kcontrol ]]
            x11-libs/libXdamage [[ note = kwin ]]
            x11-libs/libxcb [[ note = kwin ]]
            x11-utils/xcb-util-image [[ note = kwin ]]
            x11-utils/xcb-util-keysyms [[ note = kwin ]]
            x11-utils/xcb-util-renderutil [[ note = kwin ]]
        ) [[ note = [ Not needed for kf5-coinstall, but making them optional requires messing with the cmake files as they are marked as required ] ]]
        consolekit? ( sys-auth/ConsoleKit ) [[ note = kdm ]]

        !kf5-coinstall? (
            app-pim/strigi[>=0.6.3][dbus][qt4]
            dev-libs/boost[>=1.34]
            dev-libs/glib:2
            dev-libs/libusb:0.1
            dev-libs/qjson  [[ note = [ chromium bookmarks runner, hard enable since it's small and
                                         already needed for kdepimlibs ] ]]
            dev-libs/soprano[>=2.7.56][virtuoso(+)]
            kde/kdepimlibs:${SLOT}[>=${PV}]
            kde/kde-runtime:${SLOT}[>=${PV}]
            kde/nepomuk-core:${SLOT}[>=4.9.90]
            media-libs/fontconfig [[ note = kcontrol ]]
            media-libs/freetype:2 [[ note = [ kcontrol, ksplash ] ]]
            media-libs/jpeg [[ note = ksplash ]]
            media-libs/libpng:= [[ note = ksplash ]]
            server-pim/akonadi[-qt5]
            sys-apps/pciutils
            sys-apps/usbutils-data [[ note = [ required to display USB information in kinfocenter ] ]]
            x11-libs/dbusmenu-qt[>=0.6.0][qt4(+)]
            x11-libs/libXinerama
            x11-libs/libXScrnSaver [[ note = krunner ]]
            x11-libs/libXxf86misc [[ note = krunner ]]
            barcodes? ( kde/prison[qt4(+)] ) [[ note = klipper ]]
            ieee1394? ( media-libs/libraw1394 )
            wayland? (
                sys-libs/wayland
                x11-dri/mesa[wayland]
            )
            lm_sensors? ( sys-apps/lm_sensors ) [[ note = ksysguard ]]
            python? ( dev-lang/python:= )
            qalculate? ( sci-libs/libqalculate[>=0.9.5] )
            !kde/khotkeys
            !kde/kinfocenter
            !kde/kmenuedit
            !kde/ksysguard
            !kde/kwin
            !kde/kwrited
            !kde/libksysguard
            !kde/oxygen
            !kde/plasma-desktop
            !kde/plasma-workspace
            !kde/powerdevil
            !kde/systemsettings
        )
    run:
        x11-apps/xinit [[ note = kdm ]]
        x11-apps/xmessage
        x11-apps/xprop
        x11-apps/xsetroot
        x11-apps/xset
        !kf5-coinstall? (
            x11-apps/mkfontdir
            x11-apps/setxkbmap
            x11-apps/xkeyboard-config
        )
    post:
        python? ( kde/pykde4:4 )
    recommendation:
        !kf5-coinstall? ( x11-libs/appmenu-qt [[ description = [ Option to export menus and moving them to the window decoration ]  ]] )
        wayland? ( compositor/weston )
"

DEFAULT_SRC_PREPARE_PATCHES=(
    "${FILES}"/${PN}-usbids.patch
    "${FILES}"/kde-workspace-4.11.0-kdm-logind-multiseat.patch
)

CMAKE_SRC_CONFIGURE_PARAMS+=(
    -DKDE_USBIDS_DIR="/usr/share/misc"
    -DDISABLE_USBIDS_INSTALL:BOOL=TRUE
    -DKWIN_BUILD_KAPPMENU:BOOL=TRUE
    -DKDE4_XDMCP:BOOL=TRUE
    -DWITH_XKB:BOOL=TRUE # kxkb, kdm
    -DWITH_Xmms:BOOL=FALSE
    -DKDE4_{KRB5AUTH,RPCAUTH}:BOOL=FALSE
    -DWITH_libgps:BOOL=FALSE # GPS support for geolocation "http://gpsd.berlios.de/"
    -DWITH_OpenGL:BOOL=TRUE
    -DQIMAGEBLITZ_INCLUDES=/usr/include/qimageblitz
    -DQIMAGEBLITZ_LIBRARIES=/usr/${LIBDIR}/libqimageblitz.so.4 # Pass the library paths to qimageblitz libs manually so the correct ones are selected. Not the best workaround but it works.
)
CMAKE_SRC_CONFIGURE_OPTION_BUILDS+=( python )
CMAKE_SRC_CONFIGURE_OPTION_HAVES+=(
    # CMake options are different from kde/qimageblitz!
    # These are for KSplash
    'x86_cpu_features:3dnow X86_3DNOW'
    'x86_cpu_features:mmx X86_MMX'
    'x86_cpu_features:sse X86_SSE'
    'x86_cpu_features:sse2 X86_SSE2'
)
CMAKE_SRC_CONFIGURE_OPTION_WITHS+=(
    'barcodes Prison'
    'consolekit CkConnector'
    'ieee1394 RAW1394'
    'lm_sensors Sensors'
    OpenGLES
    'python PythonLibrary'
    'qalculate Qalculate'
    SYSTEMD
    Wayland
)

src_prepare() {
    edo cd "${CMAKE_SOURCE}"
    default

    # We sed out the CMake check for PyKDE4, to avoid a circular dependency on kde/kdebindings:4, which provides PyKDE4
    edo sed -e '/^if/s/AND PYKDE4_FOUND//' -e '/^endif/s/AND PYKDE4_FOUND//' \
            -e '/macro_optional_find_package(PyKDE4)/s/^/#DONOTWANT /' \
            -i CMakeLists.txt

    # Sed out the build of krandr which is deprecated
    edo sed -e '/add_subdirectory( randr )/d' -i kcontrol/CMakeLists.txt \
                                       -e '/^. krandrstartup/d' -i startkde.cmake
    if option kf5-coinstall; then
        # Prevent building ksysguard and plasma stuff
        edo sed -e '/add_subdirectory(ksysguard)/d' \
                -e '/add_subdirectory(plasmagenericshell)/d' \
                -e '/add_subdirectory(plasmaclock)/d' \
                -i libs/CMakeLists.txt
    fi
}

src_configure() {
    if option opengles; then
        CMAKE_SRC_CONFIGURE_PARAMS+=( -DKWIN_BUILD_WITH_OPENGLES=TRUE )
    fi

    if option kf5-coinstall; then
        # Disable the parts that collide with kf5
        local parts=(
            appmenu cursors doc freespacenotifier
            kcheckpass kcminit kcontrol khotkeys
            kinfocenter klipper kmenuedit krunner
            ksmserver ksplash ksysguard
            ksystraycmd ktouchpadenabler kwin kwrited
            module plasma powerdevil python qguiplatformplugin_kde
            screenlocker systemsettings
        )
        for part in ${parts[@]}; do
            CMAKE_SRC_CONFIGURE_PARAMS+=( -DBUILD_${part}=FALSE )
        done
        CMAKE_SRC_CONFIGURE_PARAMS+=(
            # Collides otherwise
            -DINCLUDE_INSTALL_DIR=/usr/include/kde4
            # Disable all the deps we do not need
            -DCMAKE_DISABLE_FIND_PACKAGE_Strigi=TRUE
            -DCMAKE_DISABLE_FIND_PACKAGE_DBusMenuQt=TRUE
            -DWITH_Akonadi:BOOL=FALSE
            -DWITH_Boost:BOOL=FALSE
            -DWITH_Fontconfig:BOOL=FALSE
            -DWITH_Freetype:BOOL=FALSE
            -DWITH_GLIB2:BOOL=FALSE
            -DWITH_NepomukCore:BOOL=FALSE
            -DWITH_Soprano:BOOL=FALSE
            -DWITH_PCIUTILS:BOOL=FALSE
            -DWITH_USB:BOOL=FALSE
            -DWITH_XINERAMA:BOOL=FALSE
            -DWITH_KdepimLibs:BOOL=FALSE
        )
    else
        CMAKE_SRC_CONFIGURE_PARAMS+=(
            -DWITH_Akonadi:BOOL=TRUE # Optional, but we hard-enable this
            -DWITH_Boost:BOOL=TRUE # Optional, but we hard-enable this. For Plasma DataEngines (Akonadi,RSS, Calendar)
            -DWITH_Fontconfig:BOOL=TRUE
            -DWITH_Freetype:BOOL=TRUE
            -DWITH_GLIB2:BOOL=TRUE
            -DWITH_NepomukCore:BOOL=TRUE
            -DWITH_Soprano:BOOL=TRUE
            -DWITH_PCIUTILS:BOOL=TRUE
            -DWITH_USB:BOOL=TRUE # Logitech USB mouse support in kcontrol
            -DWITH_XKB:BOOL=TRUE # kxkb, kdm
            -DWITH_XINERAMA:BOOL=TRUE
            -DWITH_KdepimLibs:BOOL=TRUE # Plasma RSS data engine
        )
    fi

    kde_src_configure
}

src_install() {
    GENKDMCONF_FLAGS="--no-old --no-backup" kde.org_src_install

    keepdir /usr/share/config/kdm/sessions
    edo sed -e '/SessionsDirs=/ s:$:,/usr/share/xsessions:' \
            -i "${IMAGE}"/usr/share/config/kdm/kdmrc

    insinto /usr/env
    doins "${FILES}"/agent-startup.sh

    insinto /usr/shutdown
    doins "${FILES}"/agent-shutdown.sh

    if option python; then
        python_bytecompile
    fi

    if option kf5-coinstall; then
        local remove=(
            /usr/bin/startkde
            /usr/lib64/libkworkspace.so
            /usr/lib64/libtaskmanager.so
        )
        for file in ${remove[@]}; do
            edo rm "${IMAGE}"/${file}
        done
        edo mkdir -p "${IMAGE}"/usr/${LIBDIR}/qt4/plugins
        edo mv "${IMAGE}"/usr/${LIBDIR}/kde4/plugins/styles "${IMAGE}"/usr/${LIBDIR}/qt4/plugins
        edo rm -r "${IMAGE}"/usr/${LIBDIR}/kde4/plugins
    fi

    install_systemd_files
}

pkg_postinst() {
    [[ -d ${ROOT}/var/lib/kdm ]] || edo mkdir "${ROOT}"/var/lib/kdm
    [[ -e ${ROOT}/var/log/kdm.log ]] || edo touch "${ROOT}"/var/log/kdm.log
    edo chown -R kdm:kdm "${ROOT}"/var/{lib/kdm,log/kdm.log}
    edo chmod -R 775 "${ROOT}"/var/{lib/kdm,log/kdm.log}
}

