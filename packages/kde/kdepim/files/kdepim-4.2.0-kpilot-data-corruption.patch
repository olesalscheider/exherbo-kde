Source: Upstream
Upstream: Yes
Reason: Fix 3 data corruption bugs in kpilot

From 851fd09ab4913e7152005f6680c1578af217c86b Mon Sep 17 00:00:00 2001
From: vanrijn <vanrijn@283d02a7-25f6-0310-bc7c-ecb5cbfe19da>
Date: Wed, 21 Jan 2009 14:58:15 +0000
Subject: [PATCH] This is bizarre. check == true; parentCheck == true; (check && parentCheck) == false???? changing "check" to "myCheck" in hopes of fixing this.

git-svn-id: svn://anonsvn.kde.org/home/kde/branches/KDE/4.2/kdepim@914684 283d02a7-25f6-0310-bc7c-ecb5cbfe19da
---
 kpilot/conduits/calendar/calendarakonadirecord.cc |   12 ++++++------
 1 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/kpilot/conduits/calendar/calendarakonadirecord.cc b/kpilot/conduits/calendar/calendarakonadirecord.cc
index 1b30d7c..292fb76 100644
--- a/kpilot/conduits/calendar/calendarakonadirecord.cc
+++ b/kpilot/conduits/calendar/calendarakonadirecord.cc
@@ -141,14 +141,14 @@ bool CalendarAkonadiRecord::isValid() const
 			(
 				item().payload<IncidencePtr>()
 			);
-	bool check = (!event->summary().isEmpty() &&
-		      event->dtStart().dateTime().isValid() &&
-		      event->dtEnd().dateTime().isValid());
+	bool myCheck = (!event->summary().isEmpty() &&
+			event->dtStart().dateTime().isValid() &&
+			event->dtEnd().dateTime().isValid());
 	DEBUGKPILOT << toString();
-	DEBUGKPILOT << "my checks: " << check;
+	DEBUGKPILOT << "my checks: " << myCheck;
 	bool parentCheck = AkonadiRecord::isValid();
 	DEBUGKPILOT << "parent check: " << parentCheck;
-	DEBUGKPILOT << "returning: " << (check && parentCheck);
+	DEBUGKPILOT << "returning: " << (myCheck && parentCheck);
 
-	return (check && parentCheck);
+	return (myCheck && parentCheck);
 }
-- 
1.6.1.1

From 03d93f331c60d4ff19493e5d44e71a260a0f9b7d Mon Sep 17 00:00:00 2001
From: vanrijn <vanrijn@283d02a7-25f6-0310-bc7c-ecb5cbfe19da>
Date: Wed, 21 Jan 2009 15:44:25 +0000
Subject: [PATCH] For some inexplicable reason, myCheck == true, and parentCheck == true, but
 (myCheck && parentCheck) == false earlier. We know that at this point we should
 have 2 things that are true, so use an int to get around this weirdness for the
 time being. At this point, something like this is preferable to data loss, which
 we do hit if isValid() returns false when it should be true.

git-svn-id: svn://anonsvn.kde.org/home/kde/branches/KDE/4.2/kdepim@914705 283d02a7-25f6-0310-bc7c-ecb5cbfe19da
---
 kpilot/conduits/calendar/calendarakonadirecord.cc |   20 +++++++++++++++++---
 1 files changed, 17 insertions(+), 3 deletions(-)

diff --git a/kpilot/conduits/calendar/calendarakonadirecord.cc b/kpilot/conduits/calendar/calendarakonadirecord.cc
index 292fb76..64ed1fa 100644
--- a/kpilot/conduits/calendar/calendarakonadirecord.cc
+++ b/kpilot/conduits/calendar/calendarakonadirecord.cc
@@ -141,14 +141,28 @@ bool CalendarAkonadiRecord::isValid() const
 			(
 				item().payload<IncidencePtr>()
 			);
+	unsigned int validChecks = 0;
 	bool myCheck = (!event->summary().isEmpty() &&
 			event->dtStart().dateTime().isValid() &&
 			event->dtEnd().dateTime().isValid());
 	DEBUGKPILOT << toString();
 	DEBUGKPILOT << "my checks: " << myCheck;
+	if ( myCheck ) ++validChecks;
+
 	bool parentCheck = AkonadiRecord::isValid();
 	DEBUGKPILOT << "parent check: " << parentCheck;
-	DEBUGKPILOT << "returning: " << (myCheck && parentCheck);
-
-	return (myCheck && parentCheck);
+	if ( parentCheck ) ++validChecks;
+
+	/*
+	 * For some inexplicable reason, myCheck == true, and parentCheck == true,
+	 * but (myCheck && parentCheck) == false earlier. We know that at this point
+	 * we should have 2 things that are true, so use an int to get around
+	 * this weirdness for the time being. At this point, something like this is
+	 * preferable to data loss, which we do hit if isValid() returns false when
+	 * it should be true.
+	 */
+	// TODO: Figure out how (true && true) can be false =:/
+	DEBUGKPILOT << "returning: " << ( validChecks == 2 );
+
+	return ( validChecks == 2 );
 }
-- 
1.6.1.1

From 798713bea1c6c11bd64beaeed8b955a2063a7316 Mon Sep 17 00:00:00 2001
From: vanrijn <vanrijn@283d02a7-25f6-0310-bc7c-ecb5cbfe19da>
Date: Wed, 21 Jan 2009 18:14:21 +0000
Subject: [PATCH] Instead of inferring when the record is a dummy record (a temp record, intended
 only for deletion), set it explicitly.
 CCBUG:181493

git-svn-id: svn://anonsvn.kde.org/home/kde/branches/KDE/4.2/kdepim@914762 283d02a7-25f6-0310-bc7c-ecb5cbfe19da
---
 kpilot/conduits/akonadibase/akonadidataproxy.cc |    1 +
 kpilot/conduits/akonadibase/akonadirecord.cc    |    9 ++++++++-
 kpilot/conduits/akonadibase/akonadirecord.h     |    6 ++++++
 3 files changed, 15 insertions(+), 1 deletions(-)

diff --git a/kpilot/conduits/akonadibase/akonadidataproxy.cc b/kpilot/conduits/akonadibase/akonadidataproxy.cc
index 3c72ae9..0f3eca0 100644
--- a/kpilot/conduits/akonadibase/akonadidataproxy.cc
+++ b/kpilot/conduits/akonadibase/akonadidataproxy.cc
@@ -136,6 +136,7 @@ void AkonadiDataProxy::loadAllRecords()
 				// Well the record with id mPcId doesn't seem to be in the akonadi
 				// resource any more so it is deleted.
 				AkonadiRecord* ar = createDeletedAkonadiRecord( mPcId );
+				ar->setDummy();
 				Q_ASSERT( ar->isDeleted() );
 				Q_ASSERT( ar->isModified() );
 				Q_ASSERT( ar->id() == mPcId );
diff --git a/kpilot/conduits/akonadibase/akonadirecord.cc b/kpilot/conduits/akonadibase/akonadirecord.cc
index 1646239..a7ecc11 100644
--- a/kpilot/conduits/akonadibase/akonadirecord.cc
+++ b/kpilot/conduits/akonadibase/akonadirecord.cc
@@ -53,7 +53,6 @@ AkonadiRecord::AkonadiRecord( const QString& id ) : d( new AkonadiRecordPrivate
 {
 	d->fTempId = id;
 	d->fDeleted = true;
-	d->fDummy = true;
 }
 
 AkonadiRecord::~AkonadiRecord()
@@ -130,9 +129,17 @@ void AkonadiRecord::synced()
 	// Nothing to do here.
 }
 
+void AkonadiRecord::setDummy(bool dummy)
+{
+	FUNCTIONSETUPL(5);
+	DEBUGKPILOT << "dummy: " << dummy;
+	d->fDummy = dummy;
+}
+
 bool AkonadiRecord::isValid() const
 {
 	FUNCTIONSETUPL(5);
 	bool valid = ! d->fDummy;
+	DEBUGKPILOT << "valid: " << valid;
 	return valid;
 }
diff --git a/kpilot/conduits/akonadibase/akonadirecord.h b/kpilot/conduits/akonadibase/akonadirecord.h
index e252bd8..57f7485 100644
--- a/kpilot/conduits/akonadibase/akonadirecord.h
+++ b/kpilot/conduits/akonadibase/akonadirecord.h
@@ -103,6 +103,12 @@ public:
 	 */
 	/* virtual */ bool isValid() const;
 
+	/**
+	  * Explicit set of whether this is a dummy (intended only for delete)
+	  * record.
+	  */
+	void setDummy( bool dummy = true );
+
 private:
 	QSharedDataPointer<AkonadiRecordPrivate> d;
 };
-- 
1.6.1.1

From 978ff6f0f139f3c6cad8cb92a79bf7434223bb1b Mon Sep 17 00:00:00 2001
From: vanrijn <vanrijn@283d02a7-25f6-0310-bc7c-ecb5cbfe19da>
Date: Wed, 21 Jan 2009 18:16:42 +0000
Subject: [PATCH] See if myCheck changes after parent check.
 CCBUG: 181493

git-svn-id: svn://anonsvn.kde.org/home/kde/branches/KDE/4.2/kdepim@914763 283d02a7-25f6-0310-bc7c-ecb5cbfe19da
---
 kpilot/conduits/calendar/calendarakonadirecord.cc |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/kpilot/conduits/calendar/calendarakonadirecord.cc b/kpilot/conduits/calendar/calendarakonadirecord.cc
index 64ed1fa..206b4d4 100644
--- a/kpilot/conduits/calendar/calendarakonadirecord.cc
+++ b/kpilot/conduits/calendar/calendarakonadirecord.cc
@@ -150,7 +150,7 @@ bool CalendarAkonadiRecord::isValid() const
 	if ( myCheck ) ++validChecks;
 
 	bool parentCheck = AkonadiRecord::isValid();
-	DEBUGKPILOT << "parent check: " << parentCheck;
+	DEBUGKPILOT << "parent check: " << parentCheck << ", myCheck: " << myCheck;
 	if ( parentCheck ) ++validChecks;
 
 	/*
-- 
1.6.1.1

From 79e1425be30bb2a1744451ec87908a99e132f73f Mon Sep 17 00:00:00 2001
From: vanrijn <vanrijn@283d02a7-25f6-0310-bc7c-ecb5cbfe19da>
Date: Fri, 23 Jan 2009 22:29:14 +0000
Subject: [PATCH] Fixes stupid data corruption bug.
 BUG:181493

git-svn-id: svn://anonsvn.kde.org/home/kde/branches/KDE/4.2/kdepim@915831 283d02a7-25f6-0310-bc7c-ecb5cbfe19da
---
 kpilot/conduits/akonadibase/akonadirecord.cc |    2 ++
 1 files changed, 2 insertions(+), 0 deletions(-)

diff --git a/kpilot/conduits/akonadibase/akonadirecord.cc b/kpilot/conduits/akonadibase/akonadirecord.cc
index a7ecc11..6b2288a 100644
--- a/kpilot/conduits/akonadibase/akonadirecord.cc
+++ b/kpilot/conduits/akonadibase/akonadirecord.cc
@@ -47,12 +47,14 @@ AkonadiRecord::AkonadiRecord( const Akonadi::Item& item, const QDateTime& lastSy
 	d->fItem = item;
 	d->fLastSyncDateTime = lastSync.toUTC(); // Item times are saved in UTC time.
 	d->fDeleted = false;
+	d->fDummy = false;
 }
 
 AkonadiRecord::AkonadiRecord( const QString& id ) : d( new AkonadiRecordPrivate )
 {
 	d->fTempId = id;
 	d->fDeleted = true;
+	d->fDummy = false;
 }
 
 AkonadiRecord::~AkonadiRecord()
-- 
1.6.1.1

From 49453a2a04a0802ab72dd002b162cfb0aa7c7914 Mon Sep 17 00:00:00 2001
From: vanrijn <vanrijn@283d02a7-25f6-0310-bc7c-ecb5cbfe19da>
Date: Fri, 23 Jan 2009 22:50:58 +0000
Subject: [PATCH] Make sure fDummy is correct in case we're later passed in a valid item (conflict resolution).
 CCBUG:181493

git-svn-id: svn://anonsvn.kde.org/home/kde/branches/KDE/4.2/kdepim@915837 283d02a7-25f6-0310-bc7c-ecb5cbfe19da
---
 kpilot/conduits/akonadibase/akonadirecord.cc |   11 ++++++++++-
 1 files changed, 10 insertions(+), 1 deletions(-)

diff --git a/kpilot/conduits/akonadibase/akonadirecord.cc b/kpilot/conduits/akonadibase/akonadirecord.cc
index 6b2288a..b68358a 100644
--- a/kpilot/conduits/akonadibase/akonadirecord.cc
+++ b/kpilot/conduits/akonadibase/akonadirecord.cc
@@ -50,11 +50,15 @@ AkonadiRecord::AkonadiRecord( const Akonadi::Item& item, const QDateTime& lastSy
 	d->fDummy = false;
 }
 
+/**
+ * This ctor is _only_ used for dummy records which are temporarily used to delete
+ * data.
+ */
 AkonadiRecord::AkonadiRecord( const QString& id ) : d( new AkonadiRecordPrivate )
 {
 	d->fTempId = id;
 	d->fDeleted = true;
-	d->fDummy = false;
+	d->fDummy = true;
 }
 
 AkonadiRecord::~AkonadiRecord()
@@ -123,6 +127,11 @@ void AkonadiRecord::setItem( const Akonadi::Item& item )
 	d->fItem = item;
 	// Make sure that we return the right id after updating the itemobject.
 	setId( QString::number( item.id() ) );
+	/**
+	 * Assuming we're being passed a valid item to use, make sure fDummy
+	 * is not still false after this.
+	 */
+	setDummy( false );
 }
 
 void AkonadiRecord::synced()
-- 
1.6.1.1

From 3a6c8e651fdef1fc0a18d7b51c3564d12ddccf2f Mon Sep 17 00:00:00 2001
From: vanrijn <vanrijn@283d02a7-25f6-0310-bc7c-ecb5cbfe19da>
Date: Sat, 24 Jan 2009 05:19:21 +0000
Subject: [PATCH] Fix for another data problem (Thank you Doug!!!). This one was slightly less
 irksome in that we refused to let you delete things, no matter how hard you try,
 rather than deleting things you wouldn't have wanted us to, but still, data is
 data.

BUG:181711


git-svn-id: svn://anonsvn.kde.org/home/kde/branches/KDE/4.2/kdepim@915907 283d02a7-25f6-0310-bc7c-ecb5cbfe19da
---
 kpilot/conduits/todo/todoconduit.cc |    1 +
 1 files changed, 1 insertions(+), 0 deletions(-)

diff --git a/kpilot/conduits/todo/todoconduit.cc b/kpilot/conduits/todo/todoconduit.cc
index 5c52cfb..08843ee 100644
--- a/kpilot/conduits/todo/todoconduit.cc
+++ b/kpilot/conduits/todo/todoconduit.cc
@@ -68,6 +68,7 @@ void TodoConduit::loadSettings()
 	
 	TodoSettings::self()->readConfig();
 	d->fCollectionId = TodoSettings::akonadiCollection();
+	d->fPrevCollectionId = TodoSettings::prevAkonadiCollection();
 }
 
 bool TodoConduit::initDataProxies()
-- 
1.6.1.1

